<!DOCTYPE html>
<html class="dark"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta http-equiv="X-UA-Compatible" content="ie-edge">
        <meta name="csrf-token" content="aHzsquahomm2Bo0anbhiCgbZ1siEurCTfma8L6Pk">
        <link rel="stylesheet" href="Process%20Argument%20Spoofing%20(2)_files/template.css">
        <link rel="shortcut icon" href="#favicon.ico">
        <!-- fontawesome for icons -->
        <link rel="stylesheet" href="Process%20Argument%20Spoofing%20(2)_files/font-awesome.min.css">
        <!-- google fonts -->
        <link rel="preconnect" href="https://fonts.gstatic.com/">
        <link href="Process%20Argument%20Spoofing%20(2)_files/css2.css" rel="stylesheet">
        <link href="Process%20Argument%20Spoofing%20(2)_files/css2_002.css" rel="stylesheet">
        <title>Process Argument Spoofing (2)</title>
        <!-- Custom css files, order matters -->
        <link rel="preload" as="style" href="Process%20Argument%20Spoofing%20(2)_files/app.fdbb573b.css"><link rel="stylesheet" href="Process%20Argument%20Spoofing%20(2)_files/app.fdbb573b.css"><link rel="stylesheet" href="Process%20Argument%20Spoofing%20(2)_files/viewer.css">
    </head>
    <body>
        <nav id="navbar" class="px-2 sm:px-4 py-2.5 bg-gray-900 sticky hidden">
    <div class="container flex flex-wrap justify-between mx-auto">
      <a data-target="_self" href="#" class="flex items-center">
        <div class="main-logo flex flex-row items-center">
            <span class="text-xl logo-font text-white">MALDEV</span>
            <img class="w-[25px] mx-2 relative bottom-1" src="Process%20Argument%20Spoofing%20(2)_files/logo-bug-2.png" alt="Logo">   
            <span class="text-xl logo-font text-white">ACADEMY</span>          
        </div>
      </a>
      <button data-collapse-toggle="navbar-default" id="navbar-phone-btn" type="button" class="inline-flex items-center p-2 ml-3 text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600" aria-controls="navbar-default" aria-expanded="false">
        <span class="sr-only">Open main menu</span>
        <svg class="w-6 h-6" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd"></path></svg>
      </button>
      <div class="hidden w-full md:block md:w-auto" id="navbar-default">
        <ul class="flex flex-col items-center p-4 mt-4 bg-gray-50 rounded-lg border border-gray-100 md:flex-row md:space-x-8 md:mt-0 md:text-sm md:font-medium md:border-0 md:bg-white dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700">
          <li>
            <a data-target="_self" href="#" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">Home</a>
          </li>
          <li>
            <a data-target="_self" href="#faq" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">FAQ</a>
          </li>
          <li>
            <a data-target="_self" href="#syllabus" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">Syllabus</a>
          </li>
                              <li>
            <a data-target="_self" href="#pricing" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">Pricing</a>
          </li>
                                        <li>
            <a data-target="_self" href="#profile" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">Profile</a>
          </li>
          <li>
            <form action="#logout" method="POST">
            <input type="hidden" name="_token" value="aHzsquahomm2Bo0anbhiCgbZ1siEurCTfma8L6Pk">              <button type="submit" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">Logout</button>
            </form>
          </li>
          <li class="mt-4 md:mt-0">
            <a data-target="_self" href="#modules" class="text-white bg-blue-700 hover:bg-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center md:mr-3 mr-0 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Modules</a>
          </li>
                  </ul>
      </div>
    </div>
  </nav>        <div class="bg-gray-900 p-4">
    <div class="flex">
        <div class="md:flex-row flex-col flex md:items-center w-1/2 bg-gray-700 border-l border-t border-gray-600 pl-4 pt-2 pb-2 rounded-tl">
            <div>
                Module 49 - Process Argument Spoofing (2)
            </div>
            <div class="ml-2 w-4 h-4 bg-orange-600 rounded-full"></div>
        </div>
        <div class="flex justify-end items-center w-1/2 bg-gray-700 pr-4 pt-2 pb-2 rounded-tr border-t border-r border-gray-600">
            <div class="enlarge-container pr-4">
                <img src="Process%20Argument%20Spoofing%20(2)_files/enlarge.svg" onclick="toggleScreenWidth()" class="hover:bg-gray-600 rounded-sm cursor-pointer" id="enlargeToggle" alt="Screen Width" width="20px">
            </div>
            <div class="objectives-container pr-4">
                <img src="Process%20Argument%20Spoofing%20(2)_files/objectives.svg" onclick="toggleObjectives()" class="hover:bg-gray-600 cursor-pointer" id="objectivesToggle" alt="Objectives" width="20px">
            </div>
            <div class="terminal-container  pr-4 ">
                <img src="Process%20Argument%20Spoofing%20(2)_files/ide.svg" onclick="toggleIde()" class="hover:bg-gray-600 rounded-sm cursor-pointer" id="terminalToggle" alt="Terminal" width="22px">
            </div>
                                    <div class="dl-container">
                <a href="#download/file/ArgSpoofing-2" target="_blank">
                    <img src="Process%20Argument%20Spoofing%20(2)_files/dl.svg" class="hover:bg-gray-600 rounded-full cursor-pointer" alt="Download" width="20px">
                </a>
            </div>
                                </div>
    </div>
    <div id="height-container" class="flex h-full min-h-[800px]">
        <div class="flex max-w-full min-w-full">
            <div id="description-container" class="viewer code-description h-full bg-gray-800 p-4 border-r border-l border-b border-gray-600 px-5 md:px-10 lg:px-20 w-full"><div class="toastui-editor-contents" style="overflow-wrap: break-word;">
            <h2>Process Argument Spoofing (2)</h2>
<h3>Introduction</h3>
<p>In the previous module, Procmon was tricked into logging the dummy 
command line arguments. However, the same technique does not work as 
well against some tools such as Process Hacker. The image below shows 
the result of argument spoofing in Process Hacker.</p>
<p><img src="Process%20Argument%20Spoofing%20(2)_files/spoofing-109614220-d9136e16-4a7e-4ce2-a309-db47577d6f88.png" alt="Image"></p>
<p>The legitimate arguments are being exposed by Process Hacker along 
with a fragment of the dummy argument. This module will analyze why this
 occurs and provide a solution for it.</p>
<h3>Analyzing The Problem</h3>
<p>To better understand why the legitimate arguments are exposed, the dummy argument will be set to <code>powershell.exe AAAAAAA...</code>.</p>
<p><img src="Process%20Argument%20Spoofing%20(2)_files/spoofing-209614417-27d1960a-a101-4d6d-8247-e49c9a387556.png" alt="Image"></p>
<p>Checking Process Hacker again reveals that the legit and dummy arguments are logged.</p>
<p><img src="Process%20Argument%20Spoofing%20(2)_files/spoofing-309614553-c8f18edc-301f-4bca-92e6-bf65ae03bddf.png" alt="Image"></p>
<p>The use of <code>PEB-&gt;ProcessParameters.CommandLine.Buffer</code> to overwrite the payload can be exposed by Process Hacker and other tools such as <a href="https://learn.microsoft.com/en-us/sysinternals/downloads/process-explorer" target="_blank">Process Explorer</a> because these tools use <code>NtQueryInformationProcess</code>
 to read the command line arguments of a process at runtime. Since this 
occurs at runtime, they can see what is currently inside <code>PEB-&gt;ProcessParameters.CommandLine.Buffer</code>.</p>
<h3>Solution</h3>
<p>These tools read the <code>CommandLine.Buffer</code> up until the length specified by <code>CommandLine.Length</code>. They do not rely on <code>CommandLine.Buffer</code> being null-terminated because Microsoft states in <a href="https://learn.microsoft.com/en-us/windows/win32/api/subauth/ns-subauth-unicode_string" target="_blank">their documentation</a> that <code>UNICODE_STRING.Buffer</code> might not be null-terminated.</p>
<p>In short, these tools limit the number of bytes read from <code>CommandLine.Buffer</code> to be equal to <code>CommandLine.Length</code> in order to prevent reading additional unnecessary bytes in the event that <code>CommandLine.Buffer</code> is not null-terminated.</p>
<p><img src="Process%20Argument%20Spoofing%20(2)_files/spoofing-409618296-d64a33d8-0d25-400f-9a2d-47d9483ec70f.png" alt="Image"></p>
<p>It's possible to trick these tools by setting the <code>CommandLine.Length</code> to be less than what the buffer size is. This allows control over how much of the payload inside <code>CommandLine.Buffer</code> is exposed. This can be achieved by patching the <code>CommandLine.Length</code> address in the remote process, passing the desired size of the buffer to be read by the external tools.</p>
<h3>Patching CommandLine.Length</h3>
<p>The following code snippet patches <code>PEB-&gt;ProcessParameters.CommandLine.Length</code> to limit what Process Hacker can read from <code>CommandLine.Buffer</code> only to <code>powershell.exe</code>. It works by first spoofing the argument to <code>Totally Legit Argument</code> then patching the length to be the size of <code>sizeof(L"powershell.exe")</code>.</p>
<pre><code>DWORD dwNewLen = sizeof(L"powershell.exe");

if (!WriteToTargetProcess(Pi.hProcess, ((PBYTE)pPeb-&gt;ProcessParameters + offsetof(RTL_USER_PROCESS_PARAMETERS, CommandLine.Length)), (PVOID)&amp;dwNewLen, sizeof(DWORD))){
  return FALSE;
}
</code></pre>
<h3>Demo</h3>
<p>Process Hacker view.</p>
<p><img src="Process%20Argument%20Spoofing%20(2)_files/spoofing-509622098-ebfd8016-9d4d-413f-929f-53e8465666dd.png" alt="Image"></p>
<br>
<p>Procmon view.</p>
<p><img src="Process%20Argument%20Spoofing%20(2)_files/spoofing-609622288-7f9400eb-100e-490a-a5a6-adbfa2b61f42.png" alt="Image"></p>

            </div></div>
            <div id="accessory-container" class="hidden flex flex-col w-1/4 min-w-1/4 h-full">
                <div id="objectives" class="hidden p-4 border-r border-b bg-gray-900 border-gray-600 font-code w-full h-1/2">
                    <div class="w-full bg-gray-700 text-center mb-4 font-sans text-lg">Objectives</div>
                                                                        
                                                                        
            <div class="flex items-center mb-2 font-sans">
                                <input type="checkbox" id="objective-0" data-objective-id="0" class="flex-none w-4 h-4 text-blue-600 bg-gray-100 rounded border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600">
                                <label class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-300">Patch CommandLine.Length and verify that Process Hacker and Procmon list the spoofed argument</label>
                            </div>
                                                                                  
                </div>
                <div id="ide" class="hidden p-4 border-r border-b border-gray-600 font-code w-full h-1/2">
                    <textarea class="bg-gray-900 outline-0 w-full h-full resize-none font-sans" placeholder="Write temporary notes or code here"></textarea>
                </div>
            </div>  
        </div>
      </div>
      <div class="flex">
        <div class="flex flex-row flex-wrap justify-center items-center w-full bg-gray-700 border-r border-l border-gray-600 pl-4 pt-2 pb-2 rounded-bl rounded-br">
                        <div class="mr-2">
                <a data-target="_self" href="#modules/48"><button class="w-[100px] h-10 px-5 text-sm duration-150 text-white bg-blue-700 hover:bg-blue-800 rounded-lg focus:shadow-outline">Previous</button></a>           
            </div>
                        <div class="mr-2">
                <a data-target="_self" href="#modules"><button class="w-[100px] h-10 px-5 text-sm duration-150 text-white bg-blue-700 hover:bg-blue-800 rounded-lg focus:shadow-outline">Modules</button></a>           
            </div>
            <div class="my-2 mr-2">
            <form id="complete-module" action="#modules/49/complete" method="POST">
                <input type="hidden" name="_token" value="aHzsquahomm2Bo0anbhiCgbZ1siEurCTfma8L6Pk">                <button id="complete-btn" class="w-[100px] h-10 px-5 text-white text-sm duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800 ">Complete</button>
            </form>
            <form id="uncomplete-module" action="#modules/49/progress" method="POST">
                <input type="hidden" name="_token" value="aHzsquahomm2Bo0anbhiCgbZ1siEurCTfma8L6Pk">                <button id="uncomplete-btn" class="w-[100px] h-10 px-5 text-white text-sm duration-150 bg-red-700 rounded-lg focus:shadow-outline hover:bg-red-800 hidden">Undo</button>
            </form>
            </div>
                                    <div class="mr-2">
                <a data-target="_self" href="#modules/50"><button class="w-[100px] h-10 px-5 text-sm duration-150 text-white bg-blue-700 hover:bg-blue-800 rounded-lg focus:shadow-outline">Next</button></a>           
            </div>
                    </div>
    </div>
</div>

<footer id="footer" class="text-gray-400 border-t-[1px] border-gray-700 bg-gray-900 body-font hidden">
    <div class="container px-5 py-8 mx-auto flex items-center sm:flex-row flex-col">
      <p class="text-sm text-gray-400 sm:ml-4 sm:pl-4 sm:border-gray-800 sm:py-2 sm:mt-0 mt-4">© 2023 MalDev Academy</p>
        <a href="#" target="_blank" class="text-gray-500 hover:text-white ml-2">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true"><path d="M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84"></path></svg>
        </a>
      <span class="inline-flex sm:ml-auto sm:mt-0 mt-4 justify-center sm:justify-start">
        <a class="text-gray-400 text-sm" href="/" target="_blank">
#      </a></span><a class="text-gray-400 text-sm" href="/" target="_blank">
    </a></div><a class="text-gray-400 text-sm" href="/" target="_blank">
  </a></footer><a class="text-gray-400 text-sm" href="/" target="_blank">        

        <script src="Process%20Argument%20Spoofing%20(2)_files/jquery-3.6.0.min.js"></script>
        <script src="Process%20Argument%20Spoofing%20(2)_files/bootstrap.min.js"></script>
        <link rel="preload" as="style" href="Process%20Argument%20Spoofing%20(2)_files/app.4474f4d1.css"><link rel="modulepreload" href="Process%20Argument%20Spoofing%20(2)_files/app.5f3af5ce.js"><link rel="stylesheet" href="Process%20Argument%20Spoofing%20(2)_files/app.4474f4d1.css"><script type="module" src="Process%20Argument%20Spoofing%20(2)_files/app.5f3af5ce.js"></script><script src="Process%20Argument%20Spoofing%20(2)_files/navbar.js"></script>
<script src="Process%20Argument%20Spoofing%20(2)_files/moduleviewer.js"></script>

 
<script>
$(document).ready(function() {
    $('a:not([data-target="_self"])').attr('target', '_blank');

    $('input[type=checkbox]').change(function() {
    var checked = $(this).is(':checked');
    var userId = 260;
    var moduleId = 49;
    var objectiveId = $(this).data('objective-id');
    $.ajax({
        url: checked ? "#complete/objective" : "#remove/objective",
        type: "POST",
        data: {
        _token: "aHzsquahomm2Bo0anbhiCgbZ1siEurCTfma8L6Pk",
        user_id: userId,
        module_id: moduleId,
        objective_id: objectiveId
        },
        success: function(response) {

        },
        error: function(xhr) {
        console.log('Error');
        }
    });
    });

    $('#complete-module').submit(function(event) {
    event.preventDefault(); // Prevent default form submission

    var form = $(this);
    var url = form.attr('action');
    var data = form.serialize();
    var completeBtn = form.find('#complete-btn');
    var uncompleteBtn = $('#uncomplete-btn');

    $.ajax({
        type: 'POST',
        url: url,
        data: data,
        success: function(response) {
            completeBtn.addClass('hidden');
            uncompleteBtn.removeClass('hidden');
        },
        error: function(xhr) {
            console.log('Error');
        }
    });
});

$('#uncomplete-module').submit(function(event) {
    event.preventDefault(); // Prevent default form submission

    var form = $(this);
    var url = form.attr('action');
    var data = form.serialize();
    var completeBtn = $('#complete-btn');
    var uncompleteBtn = form.find('#uncomplete-btn');

    $.ajax({
        type: 'POST',
        url: url,
        data: data,
        success: function(response) {
            uncompleteBtn.addClass('hidden');
            completeBtn.removeClass('hidden');
        },
        error: function(xhr) {
            console.log('Error');
        }
    });
});
});
</script>
    
</a></body></html>