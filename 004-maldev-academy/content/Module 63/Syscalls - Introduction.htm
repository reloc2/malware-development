<!DOCTYPE html>
<html class="dark"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta http-equiv="X-UA-Compatible" content="ie-edge">
        <meta name="csrf-token" content="YwmJrjvrFLFoheCqdySsfQHrDWEGzxTLXO7qfost">
        <link rel="stylesheet" href="Syscalls%20-%20Introduction_files/template.css">
        <link rel="shortcut icon" href="https://maldevacademy.com/favicon.ico">
        <!-- fontawesome for icons -->
        <link rel="stylesheet" href="Syscalls%20-%20Introduction_files/font-awesome.min.css">
        <!-- google fonts -->
        <link rel="preconnect" href="https://fonts.gstatic.com/">
        <link href="Syscalls%20-%20Introduction_files/css2.css" rel="stylesheet">
        <link href="Syscalls%20-%20Introduction_files/css2_002.css" rel="stylesheet">
        <title>Syscalls - Introduction</title>
        <!-- Custom css files, order matters -->
        <link rel="preload" as="style" href="Syscalls%20-%20Introduction_files/app.fdbb573b.css"><link rel="stylesheet" href="Syscalls%20-%20Introduction_files/app.fdbb573b.css"><link rel="stylesheet" href="Syscalls%20-%20Introduction_files/viewer.css">
    </head>
    <body>
        <nav id="navbar" class="px-2 sm:px-4 py-2.5 bg-gray-900 sticky hidden">
    <div class="container flex flex-wrap justify-between mx-auto">
      <a data-target="_self" href="https://maldevacademy.com/" class="flex items-center">
        <div class="main-logo flex flex-row items-center">
            <span class="text-xl logo-font text-white">MALDEV</span>
            <img class="w-[25px] mx-2 relative bottom-1" src="Syscalls%20-%20Introduction_files/logo-bug-2.png" alt="Logo">   
            <span class="text-xl logo-font text-white">ACADEMY</span>          
        </div>
      </a>
      <button data-collapse-toggle="navbar-default" id="navbar-phone-btn" type="button" class="inline-flex items-center p-2 ml-3 text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600" aria-controls="navbar-default" aria-expanded="false">
        <span class="sr-only">Open main menu</span>
        <svg class="w-6 h-6" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd"></path></svg>
      </button>
      <div class="hidden w-full md:block md:w-auto" id="navbar-default">
        <ul class="flex flex-col items-center p-4 mt-4 bg-gray-50 rounded-lg border border-gray-100 md:flex-row md:space-x-8 md:mt-0 md:text-sm md:font-medium md:border-0 md:bg-white dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700">
          <li>
            <a data-target="_self" href="https://maldevacademy.com/" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">Home</a>
          </li>
          <li>
            <a data-target="_self" href="https://maldevacademy.com/faq" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">FAQ</a>
          </li>
          <li>
            <a data-target="_self" href="https://maldevacademy.com/syllabus" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">Syllabus</a>
          </li>
                              <li>
            <a data-target="_self" href="https://maldevacademy.com/pricing" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">Pricing</a>
          </li>
                                        <li>
            <a data-target="_self" href="https://maldevacademy.com/profile" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">Profile</a>
          </li>
          <li>
            <form action="https://maldevacademy.com/logout" method="POST">
            <input type="hidden" name="_token" value="YwmJrjvrFLFoheCqdySsfQHrDWEGzxTLXO7qfost">              <button type="submit" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">Logout</button>
            </form>
          </li>
          <li class="mt-4 md:mt-0">
            <a data-target="_self" href="https://maldevacademy.com/modules" class="text-white bg-blue-700 hover:bg-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center md:mr-3 mr-0 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Modules</a>
          </li>
                  </ul>
      </div>
    </div>
  </nav>        <div class="bg-gray-900 p-4">
    <div class="flex">
        <div class="md:flex-row flex-col flex md:items-center w-1/2 bg-gray-700 border-l border-t border-gray-600 pl-4 pt-2 pb-2 rounded-tl">
            <div>
                Module 63 - Syscalls - Introduction
            </div>
            <div class="ml-2 w-4 h-4 bg-orange-600 rounded-full"></div>
        </div>
        <div class="flex justify-end items-center w-1/2 bg-gray-700 pr-4 pt-2 pb-2 rounded-tr border-t border-r border-gray-600">
            <div class="enlarge-container pr-4">
                <img src="Syscalls%20-%20Introduction_files/enlarge.svg" onclick="toggleScreenWidth()" class="hover:bg-gray-600 rounded-sm cursor-pointer" id="enlargeToggle" alt="Screen Width" width="20px">
            </div>
            <div class="objectives-container pr-4">
                <img src="Syscalls%20-%20Introduction_files/objectives.svg" onclick="toggleObjectives()" class="hover:bg-gray-600 cursor-pointer" id="objectivesToggle" alt="Objectives" width="20px">
            </div>
            <div class="terminal-container ">
                <img src="Syscalls%20-%20Introduction_files/ide.svg" onclick="toggleIde()" class="hover:bg-gray-600 rounded-sm cursor-pointer" id="terminalToggle" alt="Terminal" width="22px">
            </div>
                    </div>
    </div>
    <div id="height-container" class="flex h-full min-h-[800px]">
        <div class="flex max-w-full min-w-full">
            <div id="description-container" class="viewer code-description h-full bg-gray-800 p-4 border-r border-l border-b border-gray-600 px-5 md:px-10 lg:px-20 w-full"><div class="toastui-editor-contents" style="overflow-wrap: break-word;">
            <h2>Syscalls - Introduction</h2>
<h3>What Are Syscalls</h3>
<p>Windows system calls or syscalls serve as an interface for programs 
to interact with the system, enabling them to request specific services 
such as reading or writing to a file, creating a new process, or 
allocating memory. Recall from the introductory modules that syscalls 
are the APIs that carry out the actions when a WinAPI function is 
called. For example, the <code>NtAllocateVirtualMemory</code> syscall is triggered when either <code>VirtualAlloc</code> or <code>VirtualAllocEx</code>
 WinAPIs functions are called. This syscall then moves the parameters 
provided by the user in the previous function call to the Windows 
kernel, carries out the requested action and returns the result to the 
program.</p>
<p>All syscalls return an <a href="https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-erref/596a1078-e883-4972-9bbc-49e60bebca55" target="_blank">NTSTATUS Value</a> that indicates the error code. <code>STATUS_SUCCESS</code> (zero) is returned if the syscall succeeds in performing the operation.</p>
<p>The majority of syscalls are not documented by Microsoft, therefore 
the syscall modules will reference the documentation shown below.</p>
<ul>
<li>
<p><a href="http://undocumented.ntinternals.net/" target="_blank">Undocumented NTinternals</a></p>
</li>
<li>
<p><a href="https://doxygen.reactos.org/dir_a7ad942ac829d916497d820c4a26c555.html" target="_blank">ReactOS's NTDLL Reference</a></p>
</li>
</ul>
<h3>NTDLL &amp; Syscalls</h3>
<p>The majority of syscalls are exported from the <code>ntdll.dll</code> DLL.</p>
<h3>Why Use Syscalls</h3>
<p>Using system calls provides low-level access to the operating system,
 which can be advantageous for executing actions that are not available 
or more complex to accomplish with standard WinAPIs. For example, the <code>NtCreateUserProcess</code> syscall provides additional options when creating processes that <code>CreateProcess</code> WinAPI can't.</p>
<p>Additionally, syscalls can be used for evading host-based security solutions which will be discussed in upcoming modules.</p>
<h3>Zw vs Nt Syscalls</h3>
<p>There are two types of syscalls, ones that start with <code>Nt</code> and others with <code>Zw</code>.</p>
<p>NT syscalls are the primary interface for user-mode programs. These 
are the system calls that are typically used by most Windows programs.</p>
<p><code>Zw</code> syscalls on the other hand are a low-level, 
kernel-mode interface to the operating system. They are typically used 
by device drivers and other kernel-mode code that needs direct access to
 the operating system's functionality.</p>
<p>To summarize, <code>Zw</code> syscalls are used in kernel mode in device driver development, whereas the <code>Nt</code>
 system calls are executed from user-mode programs. Although it is 
possible to use both from user mode programs and still achieve the same 
result. This can be noticed in the below images, where both the <code>Zw</code> and <code>Nt</code> versions of the same syscall share the same function address.</p>
<p><img src="Syscalls%20-%20Introduction_files/syscalls-intro-113904478-7d2bf6e7-ee44-4a3e-8100-28e26d0fe0d.png" alt="3113"></p>
<p><img src="Syscalls%20-%20Introduction_files/syscalls-intro-213904491-110e794d-616f-4239-8a0a-96c2d2be77d.png" alt="3223"></p>
<p>For the sake of simplicity in this course, only <code>Nt</code> system calls will be used.</p>
<h3>Syscall Service Number</h3>
<p>Every syscall has a special syscall number, which is known as <em>System Service Number</em> or <em>SSN</em>. These syscall numbers are what the kernel uses to distinguish syscalls from each other. For example, the <code>NtAllocateVirtualMemory</code> syscall will have an SSN of 24 whereas <code>NtProtectVirtualMemory</code> will have an SSN of 80, these numbers are what the kernel uses to differentiate <code>NtAllocateVirtualMemory</code> from <code>NtProtectVirtualMemory</code>.</p>
<h4>Differing SSNs By OS</h4>
<p>It is important to be aware that SSNs will differ depending on the OS
 (e.g. Windows 10 vs 11) and within the version itself (e.g. Windows 11 
21h2 vs Windows 11 22h2). Using the same example mentioned above, <code>NtAllocateVirtualMemory</code> may have an SSN of 24 on one version of Windows whereas on another version it will be 34. The same would apply to <code>NtProtectVirtualMemory</code> as well as the rest of the syscalls.</p>
<h4>Syscalls In Memory</h4>
<p>Within a machine, SSNs are not completely arbitrary and have a 
relation to one another. Each syscall number in memory is equal to the 
previous SSN + 1. For example, the SSN of syscall B is equal to the SSN 
of syscall A plus one. This is also true when approaching the syscall 
from the other end, where the SSN of syscall C will be that of syscall D
 minus one.</p>
<p>This relation is shown in the following image where the SSN of <code>ZwAxxessCheck</code> is 0 and the SSN of the next syscall, <code>NtWorkerFactoryWorkerReady</code> is 1 and so on.</p>
<p><img src="Syscalls%20-%20Introduction_files/syscall-intro-221095509-588e2694-4323-4de4-a929-01a0fc209ff0.png" alt="image"></p>
<p>Understanding that the syscalls have a relation to one another will 
come in handy for evasion purposes in upcoming syscall modules.</p>
<h3>Syscall Structure</h3>
<p>The syscall structure is generally the same and will look like the snippet shown below.</p>
<pre><code>mov r10, rcx
mov eax, SSN
syscall
</code></pre>
<p>For example, <code>NtAllocateVirtualMemory</code> on a 64-bit system is shown below.</p>
<p><img src="Syscalls%20-%20Introduction_files/syscalls-intro-313903469-08ed9596-55bd-4c09-b39b-dc1f8e169d4.png" alt="image"></p>
<p>And <code>NtProtectVirtualMemory</code> is shown below.</p>
<p><img src="Syscalls%20-%20Introduction_files/syscalls-intro-413903414-69957a37-e317-4913-aa29-d9720b6f9eb.png" alt="image"></p>
<h3>Syscall Instructions Explained</h3>
<p>The first line of the syscall moves the first parameter value, saved in <code>RCX</code>, to the <code>R10</code> register. Subsequently, the SSN of the syscall is moved to the <code>EAX</code> register. Finally, the special <code>syscall</code> instruction is executed.</p>
<p>The <code>syscall</code> instruction on 64-bit systems or <code>sysenter</code> on 32-bit systems, are the instructions that initiate the system call. Executing the <code>syscall</code>
 instruction will cause the program to transfer control from user mode 
to kernel mode. The kernel will then perform the requested action and 
return control to the user mode program when completed.</p>
<h4>Test &amp; Jne Instructions</h4>
<p>The <code>test</code> and <code>jne</code> instructions are for <a href="https://learn.microsoft.com/en-us/windows/win32/winprog64/wow64-implementation-details" target="_blank">WoW64</a>
 purposes which are meant to allow 32-bit processes to run on a 64-bit 
machine. These instructions do not affect the execution flow when the 
process is a 64-bit process.</p>
<h3>Not All NtAPIs Are Syscalls</h3>
<p>It is important to note that while some NtAPIs return <code>NTSTATUS</code>,
 they are not necessarily syscalls. These NtAPIs may instead be 
lower-level functions that are used by WinAPIs or syscalls. The reason 
why certain NtAPIs are not classified as syscalls is due to their 
non-compliance with the structure of a syscall, such as not having a 
syscall number or the lack of the usual <code>mov r10, rcx</code> instruction at the start. An example of NtAPIs that are not syscalls is shown below.</p>
<ul>
<li>
<p><code>LdrLoadDll</code> - This is used by the <code>LoadLibrary</code> WinAPI to load an image to the calling process.</p>
</li>
<li>
<p><code>SystemFunction032</code> and <code>SystemFunction033</code> - These NtAPIs were introduced earlier and perform RC4 encryption/decryption operations.</p>
</li>
<li>
<p><code>RtlCreateProcessParametersEx</code> - This is used by the <code>CreateProcess</code> WinAPI to create arguments of a process.</p>
</li>
</ul>
<h4>LdrLoadDll</h4>
<p><code>LdrLoadDll</code>'s instructions are shown below. Notice how it does not follow the typical syscall structure.</p>
<p><img src="Syscalls%20-%20Introduction_files/syscall-intro-321109035-b09edb7e-5ecb-4c6f-96d5-de081603d047.png" alt="image"></p>

            </div></div>
            <div id="accessory-container" class="hidden flex flex-col w-1/4 min-w-1/4 h-full">
                <div id="objectives" class="hidden p-4 border-r border-b bg-gray-900 border-gray-600 font-code w-full h-1/2">
                    <div class="w-full bg-gray-700 text-center mb-4 font-sans text-lg">Objectives</div>
                                                                        
                                                                        
            <div class="flex items-center mb-2 font-sans">
                                <input type="checkbox" id="objective-0" data-objective-id="0" class="flex-none w-4 h-4 text-blue-600 bg-gray-100 rounded border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600">
                                <label class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-300">Familiarize yourself with the syscall structure</label>
                            </div>
                                                                        
                                                                        
                    <div class="flex items-center mb-2 font-sans">
                                <input type="checkbox" id="objective-1" data-objective-id="1" class="flex-none w-4 h-4 text-blue-600 bg-gray-100 rounded border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600">
                                <label class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-300">Read
 Microsoft's documentation about Zw and Nt functions: 
https://learn.microsoft.com/en-us/windows-hardware/drivers/kernel/using-nt-and-zw-versions-of-the-native-system-services-routines</label>
                            </div>
                                                                                  
                </div>
                <div id="ide" class="hidden p-4 border-r border-b border-gray-600 font-code w-full h-1/2">
                    <textarea class="bg-gray-900 outline-0 w-full h-full resize-none font-sans" placeholder="Write temporary notes or code here"></textarea>
                </div>
            </div>  
        </div>
      </div>
      <div class="flex">
        <div class="flex flex-row flex-wrap justify-center items-center w-full bg-gray-700 border-r border-l border-gray-600 pl-4 pt-2 pb-2 rounded-bl rounded-br">
                        <div class="mr-2">
                <a data-target="_self" href="https://maldevacademy.com/modules/62"><button class="w-[100px] h-10 px-5 text-sm duration-150 text-white bg-blue-700 hover:bg-blue-800 rounded-lg focus:shadow-outline">Previous</button></a>           
            </div>
                        <div class="mr-2">
                <a data-target="_self" href="https://maldevacademy.com/modules"><button class="w-[100px] h-10 px-5 text-sm duration-150 text-white bg-blue-700 hover:bg-blue-800 rounded-lg focus:shadow-outline">Modules</button></a>           
            </div>
            <div class="my-2 mr-2">
            <form id="complete-module" action="https://maldevacademy.com/modules/63/complete" method="POST">
                <input type="hidden" name="_token" value="YwmJrjvrFLFoheCqdySsfQHrDWEGzxTLXO7qfost">                <button id="complete-btn" class="w-[100px] h-10 px-5 text-white text-sm duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800 ">Complete</button>
            </form>
            <form id="uncomplete-module" action="https://maldevacademy.com/modules/63/progress" method="POST">
                <input type="hidden" name="_token" value="YwmJrjvrFLFoheCqdySsfQHrDWEGzxTLXO7qfost">                <button id="uncomplete-btn" class="w-[100px] h-10 px-5 text-white text-sm duration-150 bg-red-700 rounded-lg focus:shadow-outline hover:bg-red-800 hidden">Undo</button>
            </form>
            </div>
                                    <div class="mr-2">
                <a data-target="_self" href="https://maldevacademy.com/modules/64"><button class="w-[100px] h-10 px-5 text-sm duration-150 text-white bg-blue-700 hover:bg-blue-800 rounded-lg focus:shadow-outline">Next</button></a>           
            </div>
                    </div>
    </div>
</div>

<footer id="footer" class="text-gray-400 border-t-[1px] border-gray-700 bg-gray-900 body-font hidden">
    <div class="container px-5 py-8 mx-auto flex items-center sm:flex-row flex-col">
      <p class="text-sm text-gray-400 sm:ml-4 sm:pl-4 sm:border-gray-800 sm:py-2 sm:mt-0 mt-4">© 2023 MalDev Academy</p>
        <a href="https://twitter.com/maldevacademy" target="_blank" class="text-gray-500 hover:text-white ml-2">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true"><path d="M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84"></path></svg>
        </a>
      <span class="inline-flex sm:ml-auto sm:mt-0 mt-4 justify-center sm:justify-start">
        <a class="text-gray-400 text-sm" href="https://maldevacademy.com/tos" target="_blank">
          Terms and Conditions
      </a></span><a class="text-gray-400 text-sm" href="https://maldevacademy.com/tos" target="_blank">
    </a></div><a class="text-gray-400 text-sm" href="https://maldevacademy.com/tos" target="_blank">
  </a></footer><a class="text-gray-400 text-sm" href="https://maldevacademy.com/tos" target="_blank">        

        <script src="Syscalls%20-%20Introduction_files/jquery-3.6.0.min.js"></script>
        <script src="Syscalls%20-%20Introduction_files/bootstrap.min.js"></script>
        <link rel="preload" as="style" href="Syscalls%20-%20Introduction_files/app.4474f4d1.css"><link rel="modulepreload" href="Syscalls%20-%20Introduction_files/app.5f3af5ce.js"><link rel="stylesheet" href="Syscalls%20-%20Introduction_files/app.4474f4d1.css"><script type="module" src="Syscalls%20-%20Introduction_files/app.5f3af5ce.js"></script><script src="Syscalls%20-%20Introduction_files/navbar.js"></script>
<script src="Syscalls%20-%20Introduction_files/moduleviewer.js"></script>

 
<script>
$(document).ready(function() {
    $('a:not([data-target="_self"])').attr('target', '_blank');

    $('input[type=checkbox]').change(function() {
    var checked = $(this).is(':checked');
    var userId = 260;
    var moduleId = 63;
    var objectiveId = $(this).data('objective-id');
    $.ajax({
        url: checked ? "https://maldevacademy.com/complete/objective" : "https://maldevacademy.com/remove/objective",
        type: "POST",
        data: {
        _token: "YwmJrjvrFLFoheCqdySsfQHrDWEGzxTLXO7qfost",
        user_id: userId,
        module_id: moduleId,
        objective_id: objectiveId
        },
        success: function(response) {

        },
        error: function(xhr) {
        console.log('Error');
        }
    });
    });

    $('#complete-module').submit(function(event) {
    event.preventDefault(); // Prevent default form submission

    var form = $(this);
    var url = form.attr('action');
    var data = form.serialize();
    var completeBtn = form.find('#complete-btn');
    var uncompleteBtn = $('#uncomplete-btn');

    $.ajax({
        type: 'POST',
        url: url,
        data: data,
        success: function(response) {
            completeBtn.addClass('hidden');
            uncompleteBtn.removeClass('hidden');
        },
        error: function(xhr) {
            console.log('Error');
        }
    });
});

$('#uncomplete-module').submit(function(event) {
    event.preventDefault(); // Prevent default form submission

    var form = $(this);
    var url = form.attr('action');
    var data = form.serialize();
    var completeBtn = $('#complete-btn');
    var uncompleteBtn = form.find('#uncomplete-btn');

    $.ajax({
        type: 'POST',
        url: url,
        data: data,
        success: function(response) {
            uncompleteBtn.addClass('hidden');
            completeBtn.removeClass('hidden');
        },
        error: function(xhr) {
            console.log('Error');
        }
    });
});
});
</script>
    
</a></body></html>