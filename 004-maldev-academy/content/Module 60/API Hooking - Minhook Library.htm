<!DOCTYPE html>
<html class="dark"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta http-equiv="X-UA-Compatible" content="ie-edge">
        <meta name="csrf-token" content="aHzsquahomm2Bo0anbhiCgbZ1siEurCTfma8L6Pk">
        <link rel="stylesheet" href="API%20Hooking%20-%20Minhook%20Library_files/template.css">
        <link rel="shortcut icon" href="#favicon.ico">
        <!-- fontawesome for icons -->
        <link rel="stylesheet" href="API%20Hooking%20-%20Minhook%20Library_files/font-awesome.min.css">
        <!-- google fonts -->
        <link rel="preconnect" href="https://fonts.gstatic.com/">
        <link href="API%20Hooking%20-%20Minhook%20Library_files/css2.css" rel="stylesheet">
        <link href="API%20Hooking%20-%20Minhook%20Library_files/css2_002.css" rel="stylesheet">
        <title>API Hooking - Minhook Library</title>
        <!-- Custom css files, order matters -->
        <link rel="preload" as="style" href="API%20Hooking%20-%20Minhook%20Library_files/app.fdbb573b.css"><link rel="stylesheet" href="API%20Hooking%20-%20Minhook%20Library_files/app.fdbb573b.css"><link rel="stylesheet" href="API%20Hooking%20-%20Minhook%20Library_files/viewer.css">
    </head>
    <body>
        <nav id="navbar" class="px-2 sm:px-4 py-2.5 bg-gray-900 sticky hidden">
    <div class="container flex flex-wrap justify-between mx-auto">
      <a data-target="_self" href="#" class="flex items-center">
        <div class="main-logo flex flex-row items-center">
            <span class="text-xl logo-font text-white">MALDEV</span>
            <img class="w-[25px] mx-2 relative bottom-1" src="API%20Hooking%20-%20Minhook%20Library_files/logo-bug-2.png" alt="Logo">   
            <span class="text-xl logo-font text-white">ACADEMY</span>          
        </div>
      </a>
      <button data-collapse-toggle="navbar-default" id="navbar-phone-btn" type="button" class="inline-flex items-center p-2 ml-3 text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600" aria-controls="navbar-default" aria-expanded="false">
        <span class="sr-only">Open main menu</span>
        <svg class="w-6 h-6" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd"></path></svg>
      </button>
      <div class="hidden w-full md:block md:w-auto" id="navbar-default">
        <ul class="flex flex-col items-center p-4 mt-4 bg-gray-50 rounded-lg border border-gray-100 md:flex-row md:space-x-8 md:mt-0 md:text-sm md:font-medium md:border-0 md:bg-white dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700">
          <li>
            <a data-target="_self" href="#" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">Home</a>
          </li>
          <li>
            <a data-target="_self" href="#faq" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">FAQ</a>
          </li>
          <li>
            <a data-target="_self" href="#syllabus" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">Syllabus</a>
          </li>
                              <li>
            <a data-target="_self" href="#pricing" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">Pricing</a>
          </li>
                                        <li>
            <a data-target="_self" href="#profile" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">Profile</a>
          </li>
          <li>
            <form action="#logout" method="POST">
            <input type="hidden" name="_token" value="aHzsquahomm2Bo0anbhiCgbZ1siEurCTfma8L6Pk">              <button type="submit" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">Logout</button>
            </form>
          </li>
          <li class="mt-4 md:mt-0">
            <a data-target="_self" href="#modules" class="text-white bg-blue-700 hover:bg-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center md:mr-3 mr-0 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Modules</a>
          </li>
                  </ul>
      </div>
    </div>
  </nav>        <div class="bg-gray-900 p-4">
    <div class="flex">
        <div class="md:flex-row flex-col flex md:items-center w-1/2 bg-gray-700 border-l border-t border-gray-600 pl-4 pt-2 pb-2 rounded-tl">
            <div>
                Module 60 - API Hooking - Minhook Library
            </div>
            <div class="ml-2 w-4 h-4 bg-orange-600 rounded-full"></div>
        </div>
        <div class="flex justify-end items-center w-1/2 bg-gray-700 pr-4 pt-2 pb-2 rounded-tr border-t border-r border-gray-600">
            <div class="enlarge-container pr-4">
                <img src="API%20Hooking%20-%20Minhook%20Library_files/enlarge.svg" onclick="toggleScreenWidth()" class="hover:bg-gray-600 rounded-sm cursor-pointer" id="enlargeToggle" alt="Screen Width" width="20px">
            </div>
            <div class="objectives-container pr-4">
                <img src="API%20Hooking%20-%20Minhook%20Library_files/objectives.svg" onclick="toggleObjectives()" class="hover:bg-gray-600 cursor-pointer" id="objectivesToggle" alt="Objectives" width="20px">
            </div>
            <div class="terminal-container  pr-4 ">
                <img src="API%20Hooking%20-%20Minhook%20Library_files/ide.svg" onclick="toggleIde()" class="hover:bg-gray-600 rounded-sm cursor-pointer" id="terminalToggle" alt="Terminal" width="22px">
            </div>
                                    <div class="dl-container">
                <a href="#download/file/MinhookLibHooking" target="_blank">
                    <img src="API%20Hooking%20-%20Minhook%20Library_files/dl.svg" class="hover:bg-gray-600 rounded-full cursor-pointer" alt="Download" width="20px">
                </a>
            </div>
                                </div>
    </div>
    <div id="height-container" class="flex h-full min-h-[800px]">
        <div class="flex max-w-full min-w-full">
            <div id="description-container" class="viewer code-description h-full bg-gray-800 p-4 border-r border-l border-b border-gray-600 px-5 md:px-10 lg:px-20 w-full"><div class="toastui-editor-contents" style="overflow-wrap: break-word;">
            <h2>API Hooking - Minhook Library</h2>
<h3>Introduction</h3>
<p><a href="https://github.com/TsudaKageyu/minhook" target="_blank">Minhook</a>
 is a hooking library written in C that can be used to achieve API 
hooking. It is compatible with both 32-bit and 64-bit applications on 
Windows and uses x86/x64 assembly for inline hooking, similar to the 
Detours library. In comparison to other hooking libraries, MinHook is 
simpler and offers lightweight APIs, making it easier to work with.</p>
<h3>Using The Minhook Library</h3>
<p>Similarly to the Detours library, the Minhook library requires the static <code>.lib</code> file and the <a href="https://github.com/TsudaKageyu/minhook/blob/master/include/MinHook.h" target="_blank">MinHook.h</a> header file to be included in the Visual Studio project.</p>
<h3>Minhook API Functions</h3>
<p>The Minhook library works by initializing a structure that holds the 
required information needed for the hook's installation or removal. This
 is done via the <code>MH_Initialize</code> API that initializes the <a href="https://github.com/TsudaKageyu/minhook/blob/master/src/hook.c#L61" target="_blank">HOOK_ENTRY</a> structure in the library. Next, the <code>MH_CreateHook</code> function is used to create the hooks and <code>MH_EnableHook</code> is used to enable them. <code>MH_DisableHook</code> is used to remove the hooks and finally, <code>MH_Uninitialize</code> is used to clean up the initialized structure. The functions are listed again below for convenience.</p>
<ul>
<li>
<p><a href="https://github.com/TsudaKageyu/minhook/blob/master/include/MinHook.h#L96" target="_blank">MH_Initialize</a> - Initializes the HOOK_ENTRY structure.</p>
</li>
<li>
<p><a href="https://github.com/TsudaKageyu/minhook/blob/master/include/MinHook.h#L111" target="_blank">MH_CreateHook</a> - Create the hooks.</p>
</li>
<li>
<p><a href="https://github.com/TsudaKageyu/minhook/blob/master/include/MinHook.h#L154" target="_blank">MH_EnableHook</a> - Enables the created hooks.</p>
</li>
<li>
<p><a href="https://github.com/TsudaKageyu/minhook/blob/master/include/MinHook.h#L161" target="_blank">MH_DisableHook</a> - Remove the hooks.</p>
</li>
<li>
<p><a href="https://github.com/TsudaKageyu/minhook/blob/master/include/MinHook.h#L100" target="_blank">MH_Uninitialize</a> - Cleanup the initialized structure.</p>
</li>
</ul>
<p>The Minhook APIs return a <code>MH_STATUS</code> value which is a user-defined enumeration located in <a href="https://github.com/TsudaKageyu/minhook/blob/master/include/MinHook.h#L38" target="_blank">Minhook.h</a>. The returned <code>MH_STATUS</code> data type indicates the error code of a specified function. An <code>MH_OK</code> value, which is a 0, is returned if the function succeeds and a non-zero value is returned if an error occurs.</p>
<p>It is worth noting that both <code>MH_Initialize</code> and <code>MH_Uninitialize</code> functions should be only called once, at the beginning and the end of the program, respectively.</p>
<h3>The Detour Function</h3>
<p>This module will utilize the same MessageBoxA API example from the 
preceding module, which will be hooked and changed to execute a 
different message box.</p>
<pre><code>fnMessageBoxA g_pMessageBoxA = NULL;

INT WINAPI MyMessageBoxA(HWND hWnd, LPCSTR lpText, LPCSTR lpCaption, UINT uType) {

	printf("[+] Original Parameters : \n");
	printf("\t - lpText	: %s\n", lpText);
	printf("\t - lpCaption	: %s\n", lpCaption);

	return g_pMessageBoxA(hWnd, "Different lpText", "Different lpCaption", uType);
}
</code></pre>
<p>Notice the <code>g_pMessageBoxA</code> global variable is used to run the message box, where <code>g_pMessageBoxA</code> is a pointer to the original, unhooked MessageBoxA API. This is set to <code>NULL</code> because the Minhook <a href="https://github.com/TsudaKageyu/minhook/blob/master/include/MinHook.h#L108" target="_blank">MH_CreateHook</a> API call is the one that initializes it for use, as opposed to the Detours library where <code>g_pMessageBoxA</code> was set manually. This is done to prevent the occurrence of a hooking loop issue, which was discussed in the previous module.</p>
<h3>Minhook Hooking Routine</h3>
<p>As mentioned earlier, to hook a specific API using Minhook, it is first required to execute the <code>MH_Initialize</code> function. Hooks can then be created with <code>MH_CreateHook</code> and enabled with <code>MH_EnableHook</code>.</p>
<pre><code>BOOL InstallHook() {
	
	DWORD 	dwMinHookErr = NULL;

	if ((dwMinHookErr = MH_Initialize()) != MH_OK) {
		printf("[!] MH_Initialize Failed With Error : %d \n", dwMinHookErr);
		return FALSE;
	}
	
	// Installing the hook on MessageBoxA, to run MyMessageBoxA instead
	// g_pMessageBoxA will be a pointer to the original MessageBoxA function
	if ((dwMinHookErr = MH_CreateHook(&amp;MessageBoxA, &amp;MyMessageBoxA, &amp;g_pMessageBoxA)) != MH_OK) {
		printf("[!] MH_CreateHook Failed With Error : %d \n", dwMinHookErr);
		return FALSE;
	}
	
	// Enabling the hook on MessageBoxA
	if ((dwMinHookErr = MH_EnableHook(&amp;MessageBoxA)) != MH_OK) {
		printf("[!] MH_EnableHook Failed With Error : %d \n", dwMinHookErr);
		return -1;
	}

	return TRUE;
}
</code></pre>
<br>
<h3>Minhook UnHooking Routine</h3>
<p>Unlike the Detours library, the Minhook library does not require the 
use of transactions. Instead, to remove a hook, the only requirement is 
to run the <code>MH_DisableHook</code> API with the address of the hooked function. The <code>MH_Uninitialize</code> call is optional, but it cleans up the structure initialized with the previous <code>MH_Initialize</code> call.</p>
<pre><code>BOOL Unhook() {
	
	DWORD 	dwMinHookErr = NULL;

	if ((dwMinHookErr = MH_DisableHook(&amp;MessageBoxA)) != MH_OK) {
		printf("[!] MH_DisableHook Failed With Error : %d \n", dwMinHookErr);
		return -1;
	}

	if ((dwMinHookErr = MH_Uninitialize()) != MH_OK) {
		printf("[!] MH_Uninitialize Failed With Error : %d \n", dwMinHookErr);
		return -1;
	}
}
</code></pre>
<h3>The Main Function</h3>
<p>The hooking and unhooking routines previously shown do not include a 
main function. The main function is shown below which simply invokes the
 unhooked and hooked versions of <code>MessageBoxA</code>.</p>
<pre><code>int main() {

	//  will run
	MessageBoxA(NULL, "What Do You Think About Malware Development ?", "Original MsgBox", MB_OK | MB_ICONQUESTION);

	//  hooking
	if (!InstallHook())
		return -1;

	//  wont run - hooked
	MessageBoxA(NULL, "Malware Development Is Bad", "Original MsgBox", MB_OK | MB_ICONWARNING);

	//  unhooking
	if (!Unhook()) 
		return -1;

	//  will run - hook disabled
	MessageBoxA(NULL, "Normal MsgBox Again", "Original MsgBox", MB_OK | MB_ICONINFORMATION);

	return 0;
}

</code></pre>
<h3>Demo</h3>
<p>Running the first MessageBoxA (Unhooked)</p>
<p><img src="API%20Hooking%20-%20Minhook%20Library_files/minhook-113692839-29b30634-f82b-49a1-9bbc-9a27277431b2.png" alt="image"></p>
<br>
<p>Running the second MessageBoxA (Hooked)</p>
<p><img src="API%20Hooking%20-%20Minhook%20Library_files/minhook-213692909-51d8413a-eb9a-44a3-b59c-a43fc6fa5113.png" alt="image"></p>
<br>
<p>Running the third MessageBoxA (Unhooked)</p>
<p><img src="API%20Hooking%20-%20Minhook%20Library_files/minhook-313692968-0b322f31-7913-48b2-95bf-15e5088aa0af.png" alt="image"></p>

            </div></div>
            <div id="accessory-container" class="hidden flex flex-col w-1/4 min-w-1/4 h-full">
                <div id="objectives" class="hidden p-4 border-r border-b bg-gray-900 border-gray-600 font-code w-full h-1/2">
                    <div class="w-full bg-gray-700 text-center mb-4 font-sans text-lg">Objectives</div>
                                                                        
                                                                        
            <div class="flex items-center mb-2 font-sans">
                                <input type="checkbox" id="objective-0" data-objective-id="0" class="flex-none w-4 h-4 text-blue-600 bg-gray-100 rounded border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600">
                                <label class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-300">Review the Minhook library's wiki page</label>
                            </div>
                                                                        
                                                                        
                    <div class="flex items-center mb-2 font-sans">
                                <input type="checkbox" id="objective-1" data-objective-id="1" class="flex-none w-4 h-4 text-blue-600 bg-gray-100 rounded border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600">
                                <label class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-300">Learn to utilize the Minhook library to hook/unhook functions</label>
                            </div>
                                                                        
                                                                        
                    <div class="flex items-center mb-2 font-sans">
                                <input type="checkbox" id="objective-2" data-objective-id="2" class="flex-none w-4 h-4 text-blue-600 bg-gray-100 rounded border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600">
                                <label class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-300">Compile and build the .lib file</label>
                            </div>
                                                                        
                                                                        
                    <div class="flex items-center mb-2 font-sans">
                                <input type="checkbox" id="objective-3" data-objective-id="3" class="flex-none w-4 h-4 text-blue-600 bg-gray-100 rounded border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600">
                                <label class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-300">Hook a different WinAPI besides MessageBoxA</label>
                            </div>
                                                                                  
                </div>
                <div id="ide" class="hidden p-4 border-r border-b border-gray-600 font-code w-full h-1/2">
                    <textarea class="bg-gray-900 outline-0 w-full h-full resize-none font-sans" placeholder="Write temporary notes or code here"></textarea>
                </div>
            </div>  
        </div>
      </div>
      <div class="flex">
        <div class="flex flex-row flex-wrap justify-center items-center w-full bg-gray-700 border-r border-l border-gray-600 pl-4 pt-2 pb-2 rounded-bl rounded-br">
                        <div class="mr-2">
                <a data-target="_self" href="#modules/59"><button class="w-[100px] h-10 px-5 text-sm duration-150 text-white bg-blue-700 hover:bg-blue-800 rounded-lg focus:shadow-outline">Previous</button></a>           
            </div>
                        <div class="mr-2">
                <a data-target="_self" href="#modules"><button class="w-[100px] h-10 px-5 text-sm duration-150 text-white bg-blue-700 hover:bg-blue-800 rounded-lg focus:shadow-outline">Modules</button></a>           
            </div>
            <div class="my-2 mr-2">
            <form id="complete-module" action="#modules/60/complete" method="POST">
                <input type="hidden" name="_token" value="aHzsquahomm2Bo0anbhiCgbZ1siEurCTfma8L6Pk">                <button id="complete-btn" class="w-[100px] h-10 px-5 text-white text-sm duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800 ">Complete</button>
            </form>
            <form id="uncomplete-module" action="#modules/60/progress" method="POST">
                <input type="hidden" name="_token" value="aHzsquahomm2Bo0anbhiCgbZ1siEurCTfma8L6Pk">                <button id="uncomplete-btn" class="w-[100px] h-10 px-5 text-white text-sm duration-150 bg-red-700 rounded-lg focus:shadow-outline hover:bg-red-800 hidden">Undo</button>
            </form>
            </div>
                                    <div class="mr-2">
                <a data-target="_self" href="#modules/61"><button class="w-[100px] h-10 px-5 text-sm duration-150 text-white bg-blue-700 hover:bg-blue-800 rounded-lg focus:shadow-outline">Next</button></a>           
            </div>
                    </div>
    </div>
</div>

<footer id="footer" class="text-gray-400 border-t-[1px] border-gray-700 bg-gray-900 body-font hidden">
    <div class="container px-5 py-8 mx-auto flex items-center sm:flex-row flex-col">
      <p class="text-sm text-gray-400 sm:ml-4 sm:pl-4 sm:border-gray-800 sm:py-2 sm:mt-0 mt-4">© 2023 MalDev Academy</p>
        <a href="#" target="_blank" class="text-gray-500 hover:text-white ml-2">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true"><path d="M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84"></path></svg>
        </a>
      <span class="inline-flex sm:ml-auto sm:mt-0 mt-4 justify-center sm:justify-start">
        <a class="text-gray-400 text-sm" href="/" target="_blank">
#      </a></span><a class="text-gray-400 text-sm" href="/" target="_blank">
    </a></div><a class="text-gray-400 text-sm" href="/" target="_blank">
  </a></footer><a class="text-gray-400 text-sm" href="/" target="_blank">        

        <script src="API%20Hooking%20-%20Minhook%20Library_files/jquery-3.6.0.min.js"></script>
        <script src="API%20Hooking%20-%20Minhook%20Library_files/bootstrap.min.js"></script>
        <link rel="preload" as="style" href="API%20Hooking%20-%20Minhook%20Library_files/app.4474f4d1.css"><link rel="modulepreload" href="API%20Hooking%20-%20Minhook%20Library_files/app.5f3af5ce.js"><link rel="stylesheet" href="API%20Hooking%20-%20Minhook%20Library_files/app.4474f4d1.css"><script type="module" src="API%20Hooking%20-%20Minhook%20Library_files/app.5f3af5ce.js"></script><script src="API%20Hooking%20-%20Minhook%20Library_files/navbar.js"></script>
<script src="API%20Hooking%20-%20Minhook%20Library_files/moduleviewer.js"></script>

 
<script>
$(document).ready(function() {
    $('a:not([data-target="_self"])').attr('target', '_blank');

    $('input[type=checkbox]').change(function() {
    var checked = $(this).is(':checked');
    var userId = 260;
    var moduleId = 60;
    var objectiveId = $(this).data('objective-id');
    $.ajax({
        url: checked ? "#complete/objective" : "#remove/objective",
        type: "POST",
        data: {
        _token: "aHzsquahomm2Bo0anbhiCgbZ1siEurCTfma8L6Pk",
        user_id: userId,
        module_id: moduleId,
        objective_id: objectiveId
        },
        success: function(response) {

        },
        error: function(xhr) {
        console.log('Error');
        }
    });
    });

    $('#complete-module').submit(function(event) {
    event.preventDefault(); // Prevent default form submission

    var form = $(this);
    var url = form.attr('action');
    var data = form.serialize();
    var completeBtn = form.find('#complete-btn');
    var uncompleteBtn = $('#uncomplete-btn');

    $.ajax({
        type: 'POST',
        url: url,
        data: data,
        success: function(response) {
            completeBtn.addClass('hidden');
            uncompleteBtn.removeClass('hidden');
        },
        error: function(xhr) {
            console.log('Error');
        }
    });
});

$('#uncomplete-module').submit(function(event) {
    event.preventDefault(); // Prevent default form submission

    var form = $(this);
    var url = form.attr('action');
    var data = form.serialize();
    var completeBtn = $('#complete-btn');
    var uncompleteBtn = form.find('#uncomplete-btn');

    $.ajax({
        type: 'POST',
        url: url,
        data: data,
        success: function(response) {
            uncompleteBtn.addClass('hidden');
            completeBtn.removeClass('hidden');
        },
        error: function(xhr) {
            console.log('Error');
        }
    });
});
});
</script>
    
</a></body></html>