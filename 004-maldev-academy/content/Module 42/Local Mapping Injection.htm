<!DOCTYPE html>
<html class="dark"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta http-equiv="X-UA-Compatible" content="ie-edge">
        <meta name="csrf-token" content="aHzsquahomm2Bo0anbhiCgbZ1siEurCTfma8L6Pk">
        <link rel="stylesheet" href="Local%20Mapping%20Injection_files/template.css">
        <link rel="shortcut icon" href="#favicon.ico">
        <!-- fontawesome for icons -->
        <link rel="stylesheet" href="Local%20Mapping%20Injection_files/font-awesome.min.css">
        <!-- google fonts -->
        <link rel="preconnect" href="https://fonts.gstatic.com/">
        <link href="Local%20Mapping%20Injection_files/css2.css" rel="stylesheet">
        <link href="Local%20Mapping%20Injection_files/css2_002.css" rel="stylesheet">
        <title>Local Mapping Injection</title>
        <!-- Custom css files, order matters -->
        <link rel="preload" as="style" href="Local%20Mapping%20Injection_files/app.fdbb573b.css"><link rel="stylesheet" href="Local%20Mapping%20Injection_files/app.fdbb573b.css"><link rel="stylesheet" href="Local%20Mapping%20Injection_files/viewer.css">
    </head>
    <body>
        <nav id="navbar" class="px-2 sm:px-4 py-2.5 bg-gray-900 sticky hidden">
    <div class="container flex flex-wrap justify-between mx-auto">
      <a data-target="_self" href="#" class="flex items-center">
        <div class="main-logo flex flex-row items-center">
            <span class="text-xl logo-font text-white">MALDEV</span>
            <img class="w-[25px] mx-2 relative bottom-1" src="Local%20Mapping%20Injection_files/logo-bug-2.png" alt="Logo">   
            <span class="text-xl logo-font text-white">ACADEMY</span>          
        </div>
      </a>
      <button data-collapse-toggle="navbar-default" id="navbar-phone-btn" type="button" class="inline-flex items-center p-2 ml-3 text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600" aria-controls="navbar-default" aria-expanded="false">
        <span class="sr-only">Open main menu</span>
        <svg class="w-6 h-6" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd"></path></svg>
      </button>
      <div class="hidden w-full md:block md:w-auto" id="navbar-default">
        <ul class="flex flex-col items-center p-4 mt-4 bg-gray-50 rounded-lg border border-gray-100 md:flex-row md:space-x-8 md:mt-0 md:text-sm md:font-medium md:border-0 md:bg-white dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700">
          <li>
            <a data-target="_self" href="#" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">Home</a>
          </li>
          <li>
            <a data-target="_self" href="#faq" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">FAQ</a>
          </li>
          <li>
            <a data-target="_self" href="#syllabus" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">Syllabus</a>
          </li>
                              <li>
            <a data-target="_self" href="#pricing" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">Pricing</a>
          </li>
                                        <li>
            <a data-target="_self" href="#profile" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">Profile</a>
          </li>
          <li>
            <form action="#logout" method="POST">
            <input type="hidden" name="_token" value="aHzsquahomm2Bo0anbhiCgbZ1siEurCTfma8L6Pk">              <button type="submit" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">Logout</button>
            </form>
          </li>
          <li class="mt-4 md:mt-0">
            <a data-target="_self" href="#modules" class="text-white bg-blue-700 hover:bg-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center md:mr-3 mr-0 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Modules</a>
          </li>
                  </ul>
      </div>
    </div>
  </nav>        <div class="bg-gray-900 p-4">
    <div class="flex">
        <div class="md:flex-row flex-col flex md:items-center w-1/2 bg-gray-700 border-l border-t border-gray-600 pl-4 pt-2 pb-2 rounded-tl">
            <div>
                Module 42 - Local Mapping Injection
            </div>
            <div class="ml-2 w-4 h-4 bg-orange-600 rounded-full"></div>
        </div>
        <div class="flex justify-end items-center w-1/2 bg-gray-700 pr-4 pt-2 pb-2 rounded-tr border-t border-r border-gray-600">
            <div class="enlarge-container pr-4">
                <img src="Local%20Mapping%20Injection_files/enlarge.svg" onclick="toggleScreenWidth()" class="hover:bg-gray-600 rounded-sm cursor-pointer" id="enlargeToggle" alt="Screen Width" width="20px">
            </div>
            <div class="objectives-container pr-4">
                <img src="Local%20Mapping%20Injection_files/objectives.svg" onclick="toggleObjectives()" class="hover:bg-gray-600 cursor-pointer" id="objectivesToggle" alt="Objectives" width="20px">
            </div>
            <div class="terminal-container  pr-4 ">
                <img src="Local%20Mapping%20Injection_files/ide.svg" onclick="toggleIde()" class="hover:bg-gray-600 rounded-sm cursor-pointer" id="terminalToggle" alt="Terminal" width="22px">
            </div>
                                    <div class="dl-container">
                <a href="#download/file/LocalMappingInjection" target="_blank">
                    <img src="Local%20Mapping%20Injection_files/dl.svg" class="hover:bg-gray-600 rounded-full cursor-pointer" alt="Download" width="20px">
                </a>
            </div>
                                </div>
    </div>
    <div id="height-container" class="flex h-full min-h-[800px]">
        <div class="flex max-w-full min-w-full">
            <div id="description-container" class="viewer code-description h-full bg-gray-800 p-4 border-r border-l border-b border-gray-600 px-5 md:px-10 lg:px-20 w-full"><div class="toastui-editor-contents" style="overflow-wrap: break-word;">
            <h2>Local Mapping Injection</h2>
<h3>Introduction</h3>
<p>So far, in all the previous implementations a private memory type was
 used to store the payload during execution. Private memory is allocated
 using <code>VirtualAlloc</code> or <code>VirtualAllocEx</code>. The 
following image shows the allocated private memory in the 
"LocalThreadHijacking" implementation that contained the payload.</p>
<p><img src="Local%20Mapping%20Injection_files/local-map-inject-109424404-c8e38d0c-cf1a-401a-b881-e1d50f0fb.png" alt="Image"></p>
<h3>Mapped Memory</h3>
<p>The process of allocating private memory is highly monitored by 
security solutions due to its widespread usage by malware. To avoid 
these commonly monitored WinAPIs such as <code>VirtualAlloc/Ex</code> and <code>VirtualProtect/Ex</code>, mapping injection uses <code>Mapped</code> memory type using different WinAPIs such as <code>CreateFileMapping</code> and <code>MapViewOfFile</code>.</p>
<p>It is also worth noting that the <code>VirtualProtect/Ex</code> WinAPIs cannot be used to change the memory permissions of mapped memory.</p>
<h3>Local Mapping Injection</h3>
<p>This section explains the WinAPIs required to perform local mapping injection.</p>
<h4>CreateFileMapping</h4>
<p><a href="https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-createfilemappinga" target="_blank">CreateFileMapping</a>
 creates a file mapping object that provides access to the contents of a
 file through memory mapping techniques. It allows a process to create a
 virtual memory space that maps to the contents of a file on disk or to 
another memory location. The function returns a handle to the file 
mapping object.</p>
<pre><code>HANDLE CreateFileMappingA(
  [in]           HANDLE                hFile,
  [in, optional] LPSECURITY_ATTRIBUTES lpFileMappingAttributes,     // Not Required - NULL
  [in]           DWORD                 flProtect,
  [in]           DWORD                 dwMaximumSizeHigh,           // Not Required - NULL
  [in]           DWORD                 dwMaximumSizeLow,
  [in, optional] LPCSTR                lpName                       // Not Required - NULL   
);
</code></pre>
<p>The 3 required parameters for this technique are explained below. The parameters marked as not required can be set to <code>NULL</code>.</p>
<ul>
<li>
<code>hFile</code> - A handle to a file from which to create a file 
mapping handle. Since creating file mapping from a file is not required 
in the implementation, the <code>INVALID_HANDLE_VALUE</code> flag can be used instead. The <code>INVALID_HANDLE_VALUE</code> flag is explained by Microsoft:</li>
</ul>
<p><em>If hFile is INVALID_HANDLE_VALUE, the calling process must also 
specify a size for the file mapping object in the dwMaximumSizeHigh and 
dwMaximumSizeLow parameters. In this scenario, CreateFileMapping creates
 a file mapping object of a specified size that is backed by the system 
paging file instead of by a file in the file system.</em></p>
<p>Setting this flag allows the function to perform its task without 
using a file from disk, and instead the file mapping object is created 
in memory with a size specified by the <code>dwMaximumSizeHigh</code> or <code>dwMaximumSizeLow</code> parameters.</p>
<ul>
<li>
<p><code>flProtect</code> - Specifies the page protection of the file mapping object. In this implementation, it will be set as <code>PAGE_EXECUTE_READWRITE</code>. Note that this does not create an <code>RWX</code> section, but instead it specifies that it can be created later on. If it had been set to <code>PAGE_READWRITE</code>, then it would not be possible to execute the payload later on.</p>
</li>
<li>
<p><code>dwMaximumSizeLow</code> - The size of the file mapping handle returned. The value of this will be the payload's size.</p>
</li>
</ul>
<h4>MapViewOfFile</h4>
<p><a href="https://learn.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-mapviewoffile" target="_blank">MapViewOfFile</a>
 maps a view of a file mapping object into the address space of a 
process. It takes a handle to the file mapping object and the desired 
access rights and returns a pointer to the beginning of the mapping in 
the process's address space.</p>
<pre><code>LPVOID MapViewOfFile(
  [in] HANDLE     hFileMappingObject,
  [in] DWORD      dwDesiredAccess,
  [in] DWORD      dwFileOffsetHigh,           // Not Required - NULL
  [in] DWORD      dwFileOffsetLow,            // Not Required - NULL
  [in] SIZE_T     dwNumberOfBytesToMap
);
</code></pre>
<p>The 3 required parameters for this technique are explained below. The parameters marked as not required can be set to <code>NULL</code>.</p>
<ul>
<li>
<p><code>hFileMappingObject</code> - The returned handle from the <code>CreateFileMapping</code> WinAPI, which is the file mapping object.</p>
</li>
<li>
<p><code>dwDesiredAccess</code> - The type of access to a file mapping 
object, which determines the page protection of the page created. In 
other words, the memory permissions of the allocated memory by the <code>MapViewOfFile</code> call. Since <code>CreateFileMapping</code> was set to <code>PAGE_EXECUTE_READWRITE</code>, this parameter will use both the <code>FILE_MAP_EXECUTE</code> and <code>FILE_MAP_WRITE</code> flags to return valid executable and writable memory, which is what is needed to copy the payload and execute it after.</p>
</li>
</ul>
<p>Had the <code>PAGE_READWRITE</code> flag been used in <code>CreateFileMapping</code> and the <code>FILE_MAP_EXECUTE</code> flag was used in <code>MapViewOfFile</code>, then <code>MapViewOfFile</code> would have failed because executable memory was attempted to be made from a readable and writable <code>CreateFileMapping</code> object handle which is not possible.</p>
<ul>
<li>
<code>dwNumberOfBytesToMap</code> - The size of the payload.</li>
</ul>
<h3>Local Mapping Injection Function</h3>
<p><code>LocalMapInject</code> is a function that performs local mapping injection. It takes 3 arguments:</p>
<ul>
<li>
<p><code>pPayload</code> - The payload's base address.</p>
</li>
<li>
<p><code>sPayloadSize</code> - The size of the payload.</p>
</li>
<li>
<p><code>ppAddress</code> - A pointer to PVOID that receives the mapped memory's base address.</p>
</li>
</ul>
<p>The function allocates a locally mapped executable buffer and copies 
the payload that buffer then returns the base address of the mapped 
memory.</p>
<pre><code>BOOL LocalMapInject(IN PBYTE pPayload, IN SIZE_T sPayloadSize, OUT PVOID* ppAddress) {

	BOOL   bSTATE         = TRUE;
	HANDLE hFile          = NULL;
	PVOID  pMapAddress    = NULL;


	// Create a file mapping handle with RWX memory permissions
	// This does not allocate RWX view of file unless it is specified in the subsequent MapViewOfFile call  
	hFile = CreateFileMappingW(INVALID_HANDLE_VALUE, NULL, PAGE_EXECUTE_READWRITE, NULL, sPayloadSize, NULL);
	if (hFile == NULL) {
		printf("[!] CreateFileMapping Failed With Error : %d \n", GetLastError());
		bSTATE = FALSE; goto _EndOfFunction;
	}

	// Maps the view of the payload to the memory 
	pMapAddress = MapViewOfFile(hFile, FILE_MAP_WRITE | FILE_MAP_EXECUTE, NULL, NULL, sPayloadSize);
	if (pMapAddress == NULL) {
		printf("[!] MapViewOfFile Failed With Error : %d \n", GetLastError());
		bSTATE = FALSE; goto _EndOfFunction;
	}
	
    // Copying the payload to the mapped memory
	memcpy(pMapAddress, pPayload, sPayloadSize);
	
_EndOfFunction:
	*ppAddress = pMapAddress;
	if (hFile)
		CloseHandle(hFile);
	return bSTATE;
}

</code></pre>
<h3>UnmapViewOfFile</h3>
<p><a href="https://learn.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-unmapviewoffile" target="_blank">UnmapViewOfFile</a>
 is a WinAPI that is used to unmap previously mapped memory, this 
function should only be called after the payload has finished executing 
and not while it's still running. <code>UnmapViewOfFile</code> only requires the base address of the mapped view of a file to be unmapped, which is <code>pMapAddress</code> in the function above.</p>
<h3>Demo</h3>
<p>Allocating a mapped memory buffer</p>
<p><img src="Local%20Mapping%20Injection_files/local-map-inject-209424404-c8e38d0c-cf1a-401a-b881-e1d50f0fb.png" alt="image"></p>
<br>
<p>Copying the payload</p>
<p><img src="Local%20Mapping%20Injection_files/local-map-inject-309427185-a71d9b01-a6f8-4fd8-be13-25e331ad9.png" alt="image"></p>
<br>
<p>Executing the payload (Using <code>CreateThread</code> for simplicity)</p>
<p><img src="Local%20Mapping%20Injection_files/local-map-inject-409427186-264e5199-4331-4578-84bc-c9c9cba45.png" alt="image"></p>

            </div></div>
            <div id="accessory-container" class="hidden flex flex-col w-1/4 min-w-1/4 h-full">
                <div id="objectives" class="hidden p-4 border-r border-b bg-gray-900 border-gray-600 font-code w-full h-1/2">
                    <div class="w-full bg-gray-700 text-center mb-4 font-sans text-lg">Objectives</div>
                                                                        
                                                                        
            <div class="flex items-center mb-2 font-sans">
                                <input type="checkbox" id="objective-0" data-objective-id="0" class="flex-none w-4 h-4 text-blue-600 bg-gray-100 rounded border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600">
                                <label class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-300">Read up on the differences between private and mapped memory</label>
                            </div>
                                                                        
                                                                        
                    <div class="flex items-center mb-2 font-sans">
                                <input type="checkbox" id="objective-1" data-objective-id="1" class="flex-none w-4 h-4 text-blue-600 bg-gray-100 rounded border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600">
                                <label class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-300">Call UnmapViewOfFile WinAPI after the payload has finished execution (Hint: use WaitForSingleObject)</label>
                            </div>
                                                                        
                                                                        
                    <div class="flex items-center mb-2 font-sans">
                                <input type="checkbox" id="objective-2" data-objective-id="2" class="flex-none w-4 h-4 text-blue-600 bg-gray-100 rounded border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600">
                                <label class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-300">Execute the payload using thread hijacking or a callback function</label>
                            </div>
                                                                                  
                </div>
                <div id="ide" class="hidden p-4 border-r border-b border-gray-600 font-code w-full h-1/2">
                    <textarea class="bg-gray-900 outline-0 w-full h-full resize-none font-sans" placeholder="Write temporary notes or code here"></textarea>
                </div>
            </div>  
        </div>
      </div>
      <div class="flex">
        <div class="flex flex-row flex-wrap justify-center items-center w-full bg-gray-700 border-r border-l border-gray-600 pl-4 pt-2 pb-2 rounded-bl rounded-br">
                        <div class="mr-2">
                <a data-target="_self" href="#modules/41"><button class="w-[100px] h-10 px-5 text-sm duration-150 text-white bg-blue-700 hover:bg-blue-800 rounded-lg focus:shadow-outline">Previous</button></a>           
            </div>
                        <div class="mr-2">
                <a data-target="_self" href="#modules"><button class="w-[100px] h-10 px-5 text-sm duration-150 text-white bg-blue-700 hover:bg-blue-800 rounded-lg focus:shadow-outline">Modules</button></a>           
            </div>
            <div class="my-2 mr-2">
            <form id="complete-module" action="#modules/42/complete" method="POST">
                <input type="hidden" name="_token" value="aHzsquahomm2Bo0anbhiCgbZ1siEurCTfma8L6Pk">                <button id="complete-btn" class="w-[100px] h-10 px-5 text-white text-sm duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800 ">Complete</button>
            </form>
            <form id="uncomplete-module" action="#modules/42/progress" method="POST">
                <input type="hidden" name="_token" value="aHzsquahomm2Bo0anbhiCgbZ1siEurCTfma8L6Pk">                <button id="uncomplete-btn" class="w-[100px] h-10 px-5 text-white text-sm duration-150 bg-red-700 rounded-lg focus:shadow-outline hover:bg-red-800 hidden">Undo</button>
            </form>
            </div>
                                    <div class="mr-2">
                <a data-target="_self" href="#modules/43"><button class="w-[100px] h-10 px-5 text-sm duration-150 text-white bg-blue-700 hover:bg-blue-800 rounded-lg focus:shadow-outline">Next</button></a>           
            </div>
                    </div>
    </div>
</div>

<footer id="footer" class="text-gray-400 border-t-[1px] border-gray-700 bg-gray-900 body-font hidden">
    <div class="container px-5 py-8 mx-auto flex items-center sm:flex-row flex-col">
      <p class="text-sm text-gray-400 sm:ml-4 sm:pl-4 sm:border-gray-800 sm:py-2 sm:mt-0 mt-4">© 2023 MalDev Academy</p>
        <a href="#" target="_blank" class="text-gray-500 hover:text-white ml-2">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true"><path d="M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84"></path></svg>
        </a>
      <span class="inline-flex sm:ml-auto sm:mt-0 mt-4 justify-center sm:justify-start">
        <a class="text-gray-400 text-sm" href="/" target="_blank">
#      </a></span><a class="text-gray-400 text-sm" href="/" target="_blank">
    </a></div><a class="text-gray-400 text-sm" href="/" target="_blank">
  </a></footer><a class="text-gray-400 text-sm" href="/" target="_blank">        

        <script src="Local%20Mapping%20Injection_files/jquery-3.6.0.min.js"></script>
        <script src="Local%20Mapping%20Injection_files/bootstrap.min.js"></script>
        <link rel="preload" as="style" href="Local%20Mapping%20Injection_files/app.4474f4d1.css"><link rel="modulepreload" href="Local%20Mapping%20Injection_files/app.5f3af5ce.js"><link rel="stylesheet" href="Local%20Mapping%20Injection_files/app.4474f4d1.css"><script type="module" src="Local%20Mapping%20Injection_files/app.5f3af5ce.js"></script><script src="Local%20Mapping%20Injection_files/navbar.js"></script>
<script src="Local%20Mapping%20Injection_files/moduleviewer.js"></script>

 
<script>
$(document).ready(function() {
    $('a:not([data-target="_self"])').attr('target', '_blank');

    $('input[type=checkbox]').change(function() {
    var checked = $(this).is(':checked');
    var userId = 260;
    var moduleId = 42;
    var objectiveId = $(this).data('objective-id');
    $.ajax({
        url: checked ? "#complete/objective" : "#remove/objective",
        type: "POST",
        data: {
        _token: "aHzsquahomm2Bo0anbhiCgbZ1siEurCTfma8L6Pk",
        user_id: userId,
        module_id: moduleId,
        objective_id: objectiveId
        },
        success: function(response) {

        },
        error: function(xhr) {
        console.log('Error');
        }
    });
    });

    $('#complete-module').submit(function(event) {
    event.preventDefault(); // Prevent default form submission

    var form = $(this);
    var url = form.attr('action');
    var data = form.serialize();
    var completeBtn = form.find('#complete-btn');
    var uncompleteBtn = $('#uncomplete-btn');

    $.ajax({
        type: 'POST',
        url: url,
        data: data,
        success: function(response) {
            completeBtn.addClass('hidden');
            uncompleteBtn.removeClass('hidden');
        },
        error: function(xhr) {
            console.log('Error');
        }
    });
});

$('#uncomplete-module').submit(function(event) {
    event.preventDefault(); // Prevent default form submission

    var form = $(this);
    var url = form.attr('action');
    var data = form.serialize();
    var completeBtn = $('#complete-btn');
    var uncompleteBtn = form.find('#uncomplete-btn');

    $.ajax({
        type: 'POST',
        url: url,
        data: data,
        success: function(response) {
            uncompleteBtn.addClass('hidden');
            completeBtn.removeClass('hidden');
        },
        error: function(xhr) {
            console.log('Error');
        }
    });
});
});
</script>
    
</a></body></html>