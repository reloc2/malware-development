<!DOCTYPE html>
<html class="dark"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta http-equiv="X-UA-Compatible" content="ie-edge">
        <meta name="csrf-token" content="aHzsquahomm2Bo0anbhiCgbZ1siEurCTfma8L6Pk">
        <link rel="stylesheet" href="IAT%20Hiding%20&amp;%20Obfuscation%20-%20Custom%20Pseudo%20Handles_files/template.css">
        <link rel="shortcut icon" href="#favicon.ico">
        <!-- fontawesome for icons -->
        <link rel="stylesheet" href="IAT%20Hiding%20&amp;%20Obfuscation%20-%20Custom%20Pseudo%20Handles_files/font-awesome.min.css">
        <!-- google fonts -->
        <link rel="preconnect" href="https://fonts.gstatic.com/">
        <link href="IAT%20Hiding%20&amp;%20Obfuscation%20-%20Custom%20Pseudo%20Handles_files/css2.css" rel="stylesheet">
        <link href="IAT%20Hiding%20&amp;%20Obfuscation%20-%20Custom%20Pseudo%20Handles_files/css2_002.css" rel="stylesheet">
        <title>IAT Hiding &amp; Obfuscation - Custom Pseudo Handles</title>
        <!-- Custom css files, order matters -->
        <link rel="preload" as="style" href="IAT%20Hiding%20&amp;%20Obfuscation%20-%20Custom%20Pseudo%20Handles_files/app.fdbb573b.css"><link rel="stylesheet" href="IAT%20Hiding%20&amp;%20Obfuscation%20-%20Custom%20Pseudo%20Handles_files/app.fdbb573b.css"><link rel="stylesheet" href="IAT%20Hiding%20&amp;%20Obfuscation%20-%20Custom%20Pseudo%20Handles_files/viewer.css">
    </head>
    <body>
        <nav id="navbar" class="px-2 sm:px-4 py-2.5 bg-gray-900 sticky hidden">
    <div class="container flex flex-wrap justify-between mx-auto">
      <a data-target="_self" href="#" class="flex items-center">
        <div class="main-logo flex flex-row items-center">
            <span class="text-xl logo-font text-white">MALDEV</span>
            <img class="w-[25px] mx-2 relative bottom-1" src="IAT%20Hiding%20&amp;%20Obfuscation%20-%20Custom%20Pseudo%20Handles_files/logo-bug-2.png" alt="Logo">   
            <span class="text-xl logo-font text-white">ACADEMY</span>          
        </div>
      </a>
      <button data-collapse-toggle="navbar-default" id="navbar-phone-btn" type="button" class="inline-flex items-center p-2 ml-3 text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600" aria-controls="navbar-default" aria-expanded="false">
        <span class="sr-only">Open main menu</span>
        <svg class="w-6 h-6" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd"></path></svg>
      </button>
      <div class="hidden w-full md:block md:w-auto" id="navbar-default">
        <ul class="flex flex-col items-center p-4 mt-4 bg-gray-50 rounded-lg border border-gray-100 md:flex-row md:space-x-8 md:mt-0 md:text-sm md:font-medium md:border-0 md:bg-white dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700">
          <li>
            <a data-target="_self" href="#" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">Home</a>
          </li>
          <li>
            <a data-target="_self" href="#faq" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">FAQ</a>
          </li>
          <li>
            <a data-target="_self" href="#syllabus" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">Syllabus</a>
          </li>
                              <li>
            <a data-target="_self" href="#pricing" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">Pricing</a>
          </li>
                                        <li>
            <a data-target="_self" href="#profile" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">Profile</a>
          </li>
          <li>
            <form action="#logout" method="POST">
            <input type="hidden" name="_token" value="aHzsquahomm2Bo0anbhiCgbZ1siEurCTfma8L6Pk">              <button type="submit" class="block py-2 pr-4 pl-3 text-gray-400 md:p-0">Logout</button>
            </form>
          </li>
          <li class="mt-4 md:mt-0">
            <a data-target="_self" href="#modules" class="text-white bg-blue-700 hover:bg-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center md:mr-3 mr-0 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Modules</a>
          </li>
                  </ul>
      </div>
    </div>
  </nav>        <div class="bg-gray-900 p-4">
    <div class="flex">
        <div class="md:flex-row flex-col flex md:items-center w-1/2 bg-gray-700 border-l border-t border-gray-600 pl-4 pt-2 pb-2 rounded-tl">
            <div>
                Module 56 - IAT Hiding &amp; Obfuscation - Custom Pseudo Handles
            </div>
            <div class="ml-2 w-4 h-4 bg-orange-600 rounded-full"></div>
        </div>
        <div class="flex justify-end items-center w-1/2 bg-gray-700 pr-4 pt-2 pb-2 rounded-tr border-t border-r border-gray-600">
            <div class="enlarge-container pr-4">
                <img src="IAT%20Hiding%20&amp;%20Obfuscation%20-%20Custom%20Pseudo%20Handles_files/enlarge.svg" onclick="toggleScreenWidth()" class="hover:bg-gray-600 rounded-sm cursor-pointer" id="enlargeToggle" alt="Screen Width" width="20px">
            </div>
            <div class="objectives-container pr-4">
                <img src="IAT%20Hiding%20&amp;%20Obfuscation%20-%20Custom%20Pseudo%20Handles_files/objectives.svg" onclick="toggleObjectives()" class="hover:bg-gray-600 cursor-pointer" id="objectivesToggle" alt="Objectives" width="20px">
            </div>
            <div class="terminal-container ">
                <img src="IAT%20Hiding%20&amp;%20Obfuscation%20-%20Custom%20Pseudo%20Handles_files/ide.svg" onclick="toggleIde()" class="hover:bg-gray-600 rounded-sm cursor-pointer" id="terminalToggle" alt="Terminal" width="22px">
            </div>
                    </div>
    </div>
    <div id="height-container" class="flex h-full min-h-[800px]">
        <div class="flex max-w-full min-w-full">
            <div id="description-container" class="viewer code-description h-full bg-gray-800 p-4 border-r border-l border-b border-gray-600 px-5 md:px-10 lg:px-20 w-full"><div class="toastui-editor-contents" style="overflow-wrap: break-word;">
            <h2>IAT Hiding &amp; Obfuscation - Custom Pseudo Handles</h2>
<h3>Introduction</h3>
<p>As demonstrated earlier, utilizing API hashing to mask an 
implementation's IAT is an effective method. However, sometimes 
replacing a WinAPI itself,  if feasible, can enhance the concealment of 
the IAT decreasing the number of hash values, as well as reducing 
potential heuristic signatures connected to the API hashing algorithm. 
Furthermore, implementing custom code for a WinAPI function can be used 
across various implementations, simplifying the automation of the 
overall IAT hiding process.</p>
<p>With that being said, this module will go through the process of 
using a debugger to analyze two functions that retrieve pseudo handles 
and then create custom versions of them. Again, the goal is to avoid 
having these functions appear in the IAT, without leveraging API 
hashing. The functions that will be analyzed are:</p>
<ul>
<li>
<p><a href="https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getcurrentprocess" target="_blank">GetCurrentProcess</a> - Retrieves a pseudo handle for the calling process.</p>
</li>
<li>
<p><a href="https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getcurrentthread" target="_blank">GetCurrentThread</a> - Retrieves a pseudo handle for the calling thread.</p>
</li>
</ul>
<h3>What is a Pseudo Handle?</h3>
<p>A pseudo handle is a type of handle that doesn't correspond to a 
specific system resource and instead acts as a reference to the current 
process or thread.</p>
<h3>Analyzing The Functions</h3>
<p>As previously mentioned, both of these functions return a pseudo 
handle for their relative object, whether it's a process or thread. This
 section will analyze these functions using the xdbg debugger to 
understand their internal workings.</p>
<p>Begin by searching for the <code>GetCurrentProcess</code> function in the exporting DLL, <code>kernel32.dll</code>. The function's address is <code>0x00007FFD9A4A5040</code>.</p>
<p><img src="IAT%20Hiding%20&amp;%20Obfuscation%20-%20Custom%20Pseudo%20Handles_files/pseudo-handle-124505341-1cca443b-e5d2-4d90-8a75-5f77b08bfe56.png" alt="image"></p>
<p>Head to this address and notice the <code>jmp</code> instruction.</p>
<p><img src="IAT%20Hiding%20&amp;%20Obfuscation%20-%20Custom%20Pseudo%20Handles_files/pseudo-handle-224505515-1079792a-5685-4051-a364-6a7424d95646.png" alt="image"></p>
<p>Follow the jump to reach the function's code. The instruction <code>or rax, FFFFFFFFFFFFFFFF</code> will set the <code>RAX</code> register to that value, and the <code>ret</code> instruction will return <code>0xFFFFFFFFFFFFFFFF</code>. The two's complement representation of <code>0xFFFFFFFFFFFFFFFF</code> is -1.</p>
<p><img src="IAT%20Hiding%20&amp;%20Obfuscation%20-%20Custom%20Pseudo%20Handles_files/pseudo-handle-324505523-586c63fa-8f52-4564-b01f-a52c3a34524f.png" alt="image"></p>
<p>The same steps are performed for the <code>GetCurrentThread</code> function. Similarly, this function returns <code>0xFFFFFFFFFFFFFFFE</code>. The two's complement representation of <code>0xFFFFFFFFFFFFFFFE</code> is -2.</p>
<p><img src="IAT%20Hiding%20&amp;%20Obfuscation%20-%20Custom%20Pseudo%20Handles_files/pseudo-handle-424505527-99a803e2-eaff-49a3-9ac2-470bc1fb8c69.png" alt="image"></p>
<h3>Custom Implementation</h3>
<p>Since <code>GetCurrentProcess</code> returns -1 and <code>GetCurrentThread</code> returns -2, the functions can be replaced with the following macros. Notice that the values are type-casted to <code>HANDLE</code> types.</p>
<pre><code>#define NtCurrentProcess() ((HANDLE)-1) // Return the pseudo handle for the current process
#define NtCurrentThread()  ((HANDLE)-2) // Return the pseudo handle for the current thread
</code></pre>
<h3>32-bit Systems</h3>
<p>The 64-bit versions of <code>GetCurrentProcess</code> and <code>GetCurrentThread</code> functions differ from their 32-bit version only in the size of the HANDLE data type. The <code>HANDLE</code> data type on 32-bit systems is 4 bytes. The image below shows <code>GetCurrentProcess</code> on a 32-bit system.</p>
<p><img src="IAT%20Hiding%20&amp;%20Obfuscation%20-%20Custom%20Pseudo%20Handles_files/pseudo-handle-524524030-94c0a3e8-71c0-4df6-b4b5-e95b2e76edca.png" alt="image"></p>
<h3>Conclusion</h3>
<p>This module introduced the concept of replacing WinAPIs instead of 
leveraging API hashing to hide an implementation's IAT as well as 
introducing the pseudo handles concept of local threads and processes. 
It is worth mentioning that not all WinAPIs functions can be replaced 
with custom code because most of them are more complex functions than 
what was shown in this module. For additional WinAPI function 
replacement, visit the <a href="https://github.com/vxunderground/VX-API" target="_blank">VX-API Github repository</a>.</p>

            </div></div>
            <div id="accessory-container" class="hidden flex flex-col w-1/4 min-w-1/4 h-full">
                <div id="objectives" class="hidden p-4 border-r border-b bg-gray-900 border-gray-600 font-code w-full h-1/2">
                    <div class="w-full bg-gray-700 text-center mb-4 font-sans text-lg">Objectives</div>
                                                                        
                                                                        
            <div class="flex items-center mb-2 font-sans">
                                <input type="checkbox" id="objective-0" data-objective-id="0" class="flex-none w-4 h-4 text-blue-600 bg-gray-100 rounded border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600">
                                <label class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-300">Create a sample program that uses GetCurrentProcess and GetCurrentThread</label>
                            </div>
                                                                        
                                                                        
                    <div class="flex items-center mb-2 font-sans">
                                <input type="checkbox" id="objective-1" data-objective-id="1" class="flex-none w-4 h-4 text-blue-600 bg-gray-100 rounded border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600">
                                <label class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-300">In the same sample program, use the custom implementation of GetCurrentProcess and GetCurrentThread</label>
                            </div>
                                                                        
                                                                        
                    <div class="flex items-center mb-2 font-sans">
                                <input type="checkbox" id="objective-2" data-objective-id="2" class="flex-none w-4 h-4 text-blue-600 bg-gray-100 rounded border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600">
                                <label class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-300">Use https://github.com/vxunderground/VX-API to find the GetLastError WinAPI function replacement</label>
                            </div>
                                                                                  
                </div>
                <div id="ide" class="hidden p-4 border-r border-b border-gray-600 font-code w-full h-1/2">
                    <textarea class="bg-gray-900 outline-0 w-full h-full resize-none font-sans" placeholder="Write temporary notes or code here"></textarea>
                </div>
            </div>  
        </div>
      </div>
      <div class="flex">
        <div class="flex flex-row flex-wrap justify-center items-center w-full bg-gray-700 border-r border-l border-gray-600 pl-4 pt-2 pb-2 rounded-bl rounded-br">
                        <div class="mr-2">
                <a data-target="_self" href="#modules/55"><button class="w-[100px] h-10 px-5 text-sm duration-150 text-white bg-blue-700 hover:bg-blue-800 rounded-lg focus:shadow-outline">Previous</button></a>           
            </div>
                        <div class="mr-2">
                <a data-target="_self" href="#modules"><button class="w-[100px] h-10 px-5 text-sm duration-150 text-white bg-blue-700 hover:bg-blue-800 rounded-lg focus:shadow-outline">Modules</button></a>           
            </div>
            <div class="my-2 mr-2">
            <form id="complete-module" action="#modules/56/complete" method="POST">
                <input type="hidden" name="_token" value="aHzsquahomm2Bo0anbhiCgbZ1siEurCTfma8L6Pk">                <button id="complete-btn" class="w-[100px] h-10 px-5 text-white text-sm duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800 ">Complete</button>
            </form>
            <form id="uncomplete-module" action="#modules/56/progress" method="POST">
                <input type="hidden" name="_token" value="aHzsquahomm2Bo0anbhiCgbZ1siEurCTfma8L6Pk">                <button id="uncomplete-btn" class="w-[100px] h-10 px-5 text-white text-sm duration-150 bg-red-700 rounded-lg focus:shadow-outline hover:bg-red-800 hidden">Undo</button>
            </form>
            </div>
                                    <div class="mr-2">
                <a data-target="_self" href="#modules/57"><button class="w-[100px] h-10 px-5 text-sm duration-150 text-white bg-blue-700 hover:bg-blue-800 rounded-lg focus:shadow-outline">Next</button></a>           
            </div>
                    </div>
    </div>
</div>

<footer id="footer" class="text-gray-400 border-t-[1px] border-gray-700 bg-gray-900 body-font hidden">
    <div class="container px-5 py-8 mx-auto flex items-center sm:flex-row flex-col">
      <p class="text-sm text-gray-400 sm:ml-4 sm:pl-4 sm:border-gray-800 sm:py-2 sm:mt-0 mt-4">© 2023 MalDev Academy</p>
        <a href="#" target="_blank" class="text-gray-500 hover:text-white ml-2">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true"><path d="M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84"></path></svg>
        </a>
      <span class="inline-flex sm:ml-auto sm:mt-0 mt-4 justify-center sm:justify-start">
        <a class="text-gray-400 text-sm" href="/" target="_blank">
#      </a></span><a class="text-gray-400 text-sm" href="/" target="_blank">
    </a></div><a class="text-gray-400 text-sm" href="/" target="_blank">
  </a></footer><a class="text-gray-400 text-sm" href="/" target="_blank">        

        <script src="IAT%20Hiding%20&amp;%20Obfuscation%20-%20Custom%20Pseudo%20Handles_files/jquery-3.6.0.min.js"></script>
        <script src="IAT%20Hiding%20&amp;%20Obfuscation%20-%20Custom%20Pseudo%20Handles_files/bootstrap.min.js"></script>
        <link rel="preload" as="style" href="IAT%20Hiding%20&amp;%20Obfuscation%20-%20Custom%20Pseudo%20Handles_files/app.4474f4d1.css"><link rel="modulepreload" href="IAT%20Hiding%20&amp;%20Obfuscation%20-%20Custom%20Pseudo%20Handles_files/app.5f3af5ce.js"><link rel="stylesheet" href="IAT%20Hiding%20&amp;%20Obfuscation%20-%20Custom%20Pseudo%20Handles_files/app.4474f4d1.css"><script type="module" src="IAT%20Hiding%20&amp;%20Obfuscation%20-%20Custom%20Pseudo%20Handles_files/app.5f3af5ce.js"></script><script src="IAT%20Hiding%20&amp;%20Obfuscation%20-%20Custom%20Pseudo%20Handles_files/navbar.js"></script>
<script src="IAT%20Hiding%20&amp;%20Obfuscation%20-%20Custom%20Pseudo%20Handles_files/moduleviewer.js"></script>

 
<script>
$(document).ready(function() {
    $('a:not([data-target="_self"])').attr('target', '_blank');

    $('input[type=checkbox]').change(function() {
    var checked = $(this).is(':checked');
    var userId = 260;
    var moduleId = 56;
    var objectiveId = $(this).data('objective-id');
    $.ajax({
        url: checked ? "#complete/objective" : "#remove/objective",
        type: "POST",
        data: {
        _token: "aHzsquahomm2Bo0anbhiCgbZ1siEurCTfma8L6Pk",
        user_id: userId,
        module_id: moduleId,
        objective_id: objectiveId
        },
        success: function(response) {

        },
        error: function(xhr) {
        console.log('Error');
        }
    });
    });

    $('#complete-module').submit(function(event) {
    event.preventDefault(); // Prevent default form submission

    var form = $(this);
    var url = form.attr('action');
    var data = form.serialize();
    var completeBtn = form.find('#complete-btn');
    var uncompleteBtn = $('#uncomplete-btn');

    $.ajax({
        type: 'POST',
        url: url,
        data: data,
        success: function(response) {
            completeBtn.addClass('hidden');
            uncompleteBtn.removeClass('hidden');
        },
        error: function(xhr) {
            console.log('Error');
        }
    });
});

$('#uncomplete-module').submit(function(event) {
    event.preventDefault(); // Prevent default form submission

    var form = $(this);
    var url = form.attr('action');
    var data = form.serialize();
    var completeBtn = $('#complete-btn');
    var uncompleteBtn = form.find('#uncomplete-btn');

    $.ajax({
        type: 'POST',
        url: url,
        data: data,
        success: function(response) {
            uncompleteBtn.addClass('hidden');
            completeBtn.removeClass('hidden');
        },
        error: function(xhr) {
            console.log('Error');
        }
    });
});
});
</script>
    
</a></body></html>